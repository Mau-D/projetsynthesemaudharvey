{"version":3,"sources":["components/boutons/BoutonContactCandidat.js","components/public/DemandeCarte.js","components/boutons/BoutonListe.js","components/public/DemandesGroupCards.js","components/boutons/BoutonPostuler.js","components/public/OffreCarte.js","components/public/OffresGroupCards.js","utils/index.js","components/boutons/BoutonInscription.js","img/logo.svg","components/public/EnTete.js","components/public/PiedDePage.js","img/publicationDemande.svg","components/public/PublicationDemandeStage.js","img/publicationOffre.svg","components/public/PublicationOffreStage.js","img/schema.svg","components/public/UtilisationSchema.js","views/Accueil.js","img/livre.svg","components/public/ImageTexte.js","img/forcesavenir.svg","img/centraide.svg","img/renojouets.svg","img/logoNoir.svg","views/APropos.js","views/Confidentialite.js","views/Contact.js","views/Partenaires.js","components/public/SecteursActivite.js","components/public/OffreDetails.js","views/OffresStageListe.js","components/public/DemandeDetails.js","views/DemandesStageListe.js","components/public/FormulaireConnexion.js","components/public/FormulaireInscription.js","views/AccesCompte.js","components/boutons/BoutonAjoutDemande.js","components/boutons/BoutonAjoutOffre.js","components/admin/DetailsUtilisateur.js","components/boutons/BoutonRemoveDemande.js","components/admin/DemandeStageCarte.js","components/admin/DemandesStage.js","components/admin/ValidationCarteOffre.js","components/admin/ValidationCarteDemande.js","components/admin/Validation.js","components/admin/CandidatCarte.js","components/admin/CandidatsListe.js","views/Admin.js","components/admin/FormEditDemande.js","components/admin/FormAjoutDemande.js","App.js","reportWebVitals.js","index.js"],"names":["BoutonContactCandidat","Button","size","className","DemandeCarte","props","Card","style","width","Container","fluid","Row","Col","sm","Body","xs","dateParution","Title","titre","Subtitle","ville","Img","src","Text","formation","description","to","id","courriel","BoutonListe","lien","classStyle","texte","DemandesGroupCards","useState","donneesRecues","setDonneesRecues","a","fetch","process","response","json","reponseDeApi","ok","Error","statusText","console","log","formatDate","d","dateMoment","Moment","add","locale","format","useEffect","getDemandesStage","filter","donnee","vedette","valide","actif","supprime","map","item","key","md","lg","_id","programmeSuivi","BoutonPostuler","OffreCarte","entreprise","infos","OffresGroupCards","getOffresStage","verifie","informationsSupplementaires","TOKEN_KEY","logout","localStorage","removeItem","BoutonInscription","variant","labelBouton","EnTete","formulaire","setFormulaire","ls","require","form","Navbar","collapseOnSelect","expand","logo","alt","Toggle","aria-controls","Collapse","Nav","get","onClick","clear","PiedDePage","NavItem","PublicationDemandeStage","Image","publicationDemande","PublicationOffreStage","publicationOffre","UtilisationSchema","schema","Accueil","ImageTexte","livre","APropos","logoNoir","forcesavenir","centraide","renojouets","Confidentialite","Politique","Partenaires","SecteursActivite","getSecteurs","Table","striped","bordered","hover","nom","OffreDetails","location","useLocation","objetRecu","setObjetRecu","tabCompetences","setTabCompetences","getId","search","replace","idChoosen","competences","getDetailsOffre","dateDebut","emploiApresStage","dateFin","remunere","duree","nbHeuresSemaine","ListGroup","i","Item","autresInformations","OffresStageListe","chargertout","setChargertout","span","order","sort","b","Date","spna","DemandeDetails","tabFormations","setTabFormations","autresFormations","getDetailsDemande","typestage","DemandesStageListe","FormulaireConnexion","userTrue","setUserTrue","authentification","nomUtilisateur","document","getElementById","value","prenomUtilisateur","motDePasse","set","utilisateurExistant","prenom","password","niveau","toString","setItem","getItem","alert","getUtilisateurs","Form","Group","controlId","Label","Control","type","placeholder","FormulaireInscription","errors","setErrors","statut","setStatut","validEmail","setValidEmail","validTelephone","setValidTelephone","checkEmail","email","reValid","test","onSubmit","event","preventDefault","confirmationPassword","institution","adresse","region","telephone","_errors","samePassword","checkTelephone","Object","keys","length","formulaireEstValide","isInvalid","Feedback","onBlur","Check","name","label","tel","AccesCompte","pathname","offset","BoutonAjoutDemande","BoutonAjoutOffre","DetailsUtilisateur","user","transform","BoutonRemoveDemande","demandeID","method","DemandeStageCarte","objetEtudiant","setObjetEtudiant","etudiant","getEtudiant","nomEcole","DemandesStage","acces","ValidationCarteOffre","ValidationCarteDemande","headers","body","JSON","stringify","secteurActivite","toast","dark","setTimeout","window","reload","Validation","CandidatCarte","Admin","searchString","substring","adminSection","setAdminSection","etudiantSection","setEtudiantSection","Link","disabled","renderSwitchBouton","renderSwitchStatut","roundedCircle","height","Dropdown","Menu","CandidatsListe","renderSwitchAdmin","renderSwitchEtudiant","renderSwitchMain","registerLocale","fr","FormEditDemande","stringId","secteurs","setSecteurs","secteurChoisi","setSecteurChoisi","dateDebutEdit","setDateDebutEdit","dateFinEdit","setDateFinEdit","change","setChange","autresFormationsEdit","setAutresFormationsEdit","setCompetences","objetDemande","setObjetDemande","autresInfos","remuneration","history","push","handleClickAjoutFormation","tabformations","formationAjoutee","handleClickAjoutCompetence","tabcompetences","competenceAjoutee","getDemande","defaultValue","onChange","e","target","selected","utcOffset","dateFormat","evt","toDate","as","rows","checked","splice","handleChangeFormations","for","handleChangeCompetences","editDemande","FormAjoutDemande","dateDebutAdd","setDateDebutAdd","dateFinAdd","setDateFinAdd","autresFormationsAdd","setAutresFormationsAdd","AddDemande","defaultProps","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","path","exact","component","Contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.672b5aa5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// Hook pour le bouton pour contacter le candidat\r\nfunction BoutonContactCandidat() {\r\n  return (\r\n    <Button size=\"sm\" className=\"ml-3 postuler\">\r\n      Contacter le candidat\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default BoutonContactCandidat;\r\n","import React from \"react\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BoutonContactCandidat from \"../boutons/BoutonContactCandidat\";\r\n\r\n// Hook pour les cards des demandes de stage\r\nfunction DemandeCarte(props) {\r\n  return (\r\n    <Card className=\"w-100 text-left mb-1 pb-2\" style={{ width: \"25rem\" }}>\r\n      <Container fluid className=\"h-100 hauteurViewport\">\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col xs={10}>\r\n                  <p>{props.dateParution}</p>\r\n                  <Card.Title>{props.titre}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    {props.ville}\r\n                  </Card.Subtitle>\r\n                </Col>\r\n                <Col xs={2} className=\"p-0\">\r\n                  <Card.Img src=\"https://upload.wikimedia.org/wikipedia/fr/d/dd/C%C3%A9gep_Trois-Rivi%C3%A8res_Logo.jpg\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Card.Text>{props.formation}</Card.Text>\r\n                  <Card.Text>{props.description}</Card.Text>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/*Lien en incluant l'id de la carte sélectionnée pour afficher les détails */}\r\n      <div className=\"align-items-end basCard\">\r\n        {\" \"}\r\n        <Link to={\"/demandesstage/?id=\" + props.id}>Détails</Link>\r\n        <BoutonContactCandidat\r\n          courriel={props.courriel}\r\n        ></BoutonContactCandidat>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DemandeCarte;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Hook pour le bouton pour afficher la liste des demandes de stage\r\nfunction BoutonListe(props) {\r\n  return (\r\n    <>\r\n      <Link to={props.lien} size=\"md\" className={props.classStyle}>\r\n        {props.texte}\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\nexport default BoutonListe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport DemandeCarte from \"./DemandeCarte\";\r\nimport BoutonListe from \"../boutons/BoutonListe\";\r\n\r\n// Hook pour l'affichage des demandes de stage en vedette\r\nfunction DemandesGroupCards() {\r\n  //Constante pour les données reçues par l'API\r\n  //L'utilisation du useState, fera de nouveau le rendu à chaque fois qu'elle est modifiée\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  //Pour le CRUD utiliser useEffect, exécute quelquechose après chaque affichage\r\n  //Remplace la combinaison de componentDidMount, componentDidUpdate, et componentWillUnmount.\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage\r\n    getDemandesStage();\r\n  }, []);\r\n  //Fonction pour l'appel à l'API\r\n  async function getDemandesStage() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_DEMANDES\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour appliquer la langue et le format de la date\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d).add(1, \"days\");\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n  return (\r\n    <Container fluid className=\"m-4\">\r\n      <Row className=\"w-md-50 mx-auto text-center m-2\">\r\n        <Col sm={12}>\r\n          <h2 className=\"mb-5\">Votre futur stagiaire se trouve ici.</h2>\r\n          <p>\r\n            Pellentesque vehicula fermentum turpis eu cursus. Cras convallis\r\n            tellus et elit aliquet, vitae dignissim ligula sodales.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      {/* Cards  des demandes en vedette */}\r\n\r\n      <Row className=\"m-1 text-center\">\r\n        {/*Filtre pour afficher seulement les demandes avec le paramètre vedette = true */}\r\n        {donneesRecues\r\n          .filter(\r\n            (donnee) =>\r\n              donnee.vedette &&\r\n              donnee.valide &&\r\n              donnee.actif &&\r\n              !donnee.supprime\r\n          )\r\n          .map((item, key) => (\r\n            <Col\r\n              xs={12}\r\n              md={6}\r\n              lg={4}\r\n              className=\"mt-2\"\r\n              key={\"Demandekey\" + item._id}\r\n            >\r\n              <DemandeCarte\r\n                id={item._id}\r\n                titre={item.titre}\r\n                ville={item.ville}\r\n                formation={item.programmeSuivi}\r\n                description={item.description}\r\n                dateParution={formatDate(item.dateParution)}\r\n              ></DemandeCarte>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      {/* Bouton voir tous les candidats*/}\r\n      <Row className=\"text-center\">\r\n        <Col sm={12} className=\"mx-auto\">\r\n          <BoutonListe\r\n            texte=\"Voir tous les candidats\"\r\n            classStyle=\"btn btn-danger\"\r\n            lien=\"/demandesstage\"\r\n          ></BoutonListe>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DemandesGroupCards;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// Hook pour le bouton pour postuler\r\nfunction BoutonPostuler() {\r\n  return (\r\n    <Button size=\"md\" className=\"ml-3 postuler\">\r\n      Postuler\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default BoutonPostuler;\r\n","import React from \"react\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BoutonPostuler from \"../boutons/BoutonPostuler\";\r\n\r\n// Hook pour les cards des offres de stage\r\nfunction OffreCarte(props) {\r\n  return (\r\n    <Card className=\"w-100 text-left mb-4 pb-2 \" style={{ width: \"25rem\" }}>\r\n      <Container fluid className=\"h-100 hauteurViewport\">\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col xs={10}>\r\n                  <p>{props.dateParution}</p>\r\n                  <Card.Title>{props.titre}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted d-inline-block\">\r\n                    <h5>{props.entreprise}</h5>\r\n                    <p>{props.ville}</p>\r\n                  </Card.Subtitle>\r\n                </Col>\r\n                <Col xs={2} className=\"p-0\">\r\n                  <Card.Img src=\"https://media-exp1.licdn.com/dms/image/C560BAQHW4Y9tPlk6pA/company-logo_200_200/0/1598369955104?e=2159024400&v=beta&t=KR_n6l3Q3hQKHFBrdDL36cONUVoyCj2Jxy6Uw_TT-38\" />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <Card.Text>{props.description}</Card.Text>\r\n                  <Card.Text>{props.infos}</Card.Text>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div>\r\n        {/*Lien en incluant l'id de la carte sélectionnée pour afficher les détails */}\r\n        <Link to={\"offresstage/?id=\" + props.id}>Détails</Link>\r\n        <BoutonPostuler></BoutonPostuler>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default OffreCarte;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport OffreCarte from \"./OffreCarte\";\r\nimport BoutonListe from \"../boutons/BoutonListe\";\r\n\r\n// Hook pour l'affichage des Offres de stage en vedette\r\nfunction OffresGroupCards() {\r\n  //Constante pour les données reçues par l'API\r\n  //L'utilisation du useState, fera de nouveau le rendu à chaque fois qu'elle est modifiée\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  //Pour le CRUD utiliser useEffect, exécute quelquechose après chaque affichage\r\n  //Remplace la combinaison de componentDidMount, componentDidUpdate, et componentWillUnmount.\r\n  useEffect(() => {\r\n    //appelle la fonction getOffresStage\r\n    getOffresStage();\r\n  }, []);\r\n  //Fonction pour l'appel à l'API\r\n  async function getOffresStage() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_OFFRES\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour appliquer la langue et le format de la date\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d);\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n  return (\r\n    <Container fluid className=\"m-4\">\r\n      <Row className=\"w-md-50 mx-auto text-center m-2\">\r\n        <Col lg={12}>\r\n          <h2 className=\"mb-5\">\r\n            Tu es à la recherche de ton stage de fin d'études?\r\n          </h2>\r\n          <p>\r\n            Pellentesque vehicula fermentum turpis eu cursus. Cras convallis\r\n            tellus et elit aliquet, vitae dignissim ligula sodales.{\" \"}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      {/* Cards des offres en vedette */}\r\n      <Row className=\"m-1 text-center\">\r\n        {/*Filtre pour afficher seulement les offres avec le paramètre vedette = true */}\r\n\r\n        {donneesRecues\r\n          .filter((donnee) => donnee.vedette && donnee.verifie && donnee.actif)\r\n          .map((item) => (\r\n            <Col\r\n              xs={12}\r\n              md={6}\r\n              lg={4}\r\n              className=\"mt-2\"\r\n              key={\"Offrekey\" + item._id}\r\n            >\r\n              <OffreCarte\r\n                id={item._id}\r\n                titre={item.titre}\r\n                entreprise={item.entreprise}\r\n                ville={item.ville}\r\n                description={item.description}\r\n                dateParution={formatDate(item.dateParution)}\r\n                infos={item.informationsSupplementaires}\r\n              ></OffreCarte>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n      {/* Bouton voir toutes les offres de stage */}\r\n      <Row className=\"text-center\">\r\n        <Col lg={12} className=\"mx-auto\">\r\n          <BoutonListe\r\n            texte=\"Voir toutes les offres\"\r\n            classStyle=\"btn btn-danger\"\r\n            lien=\"/offresstage\"\r\n          ></BoutonListe>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OffresGroupCards;\r\n","//Pour la gestion du localStorage, connexion et déconnexion d'un utilisateur\r\nconst TOKEN_KEY = \"jwt\";\r\n\r\nexport const login = () => {\r\n  localStorage.setItem(TOKEN_KEY, \"TestLogin\");\r\n  console.log(\"token\" + localStorage.getItem(TOKEN_KEY));\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n};\r\n\r\nexport const isLogin = () => {\r\n  if (localStorage.getItem(TOKEN_KEY)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// Hook pour le bouton de connexion\r\nfunction BoutonInscription(props) {\r\n  return (\r\n    <Button size=\"md\" variant=\"dark\">\r\n      {props.labelBouton}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default BoutonInscription;\r\n","export default __webpack_public_path__ + \"static/media/logo.aba72659.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { logout } from \"../../utils/index\";\r\n\r\nimport BoutonInscription from \"../boutons/BoutonInscription\";\r\n//import RechercheTrouverVotreStage from \"./RechercheTrouverVotreStage\";\r\nimport BoutonListe from \"../boutons/BoutonListe\";\r\n\r\nimport logo from \"../../img/logo.svg\";\r\n\r\nimport { BsBoxArrowRight } from \"react-icons/bs\";\r\n\r\n// Hook pour la bannière\r\nfunction EnTete(props) {\r\n  const [formulaire, setFormulaire] = useState(\"\");\r\n\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n  useEffect(() => {\r\n    var form = props.formulaire;\r\n    setFormulaire(form);\r\n  }, [props.formulaire]);\r\n  return (\r\n    <>\r\n      {/* Menu avec logo et bouton, navbar collapsible */}\r\n      <Row className=\"d-flex \">\r\n        <Navbar className=\"w-100 mx-5 navbar-dark\" collapseOnSelect expand=\"lg\">\r\n          <Link to=\"/\" className=\"accueil\">\r\n            <img src={logo} alt=\"logo\" />\r\n          </Link>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav \" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto ml-5\">\r\n              <BoutonListe\r\n                texte=\"Trouvez votre stage\"\r\n                lien=\"/offresstage\"\r\n                classStyle=\"btn btn-success\"\r\n              ></BoutonListe>\r\n\r\n              <BoutonListe\r\n                lien=\"/demandesstage\"\r\n                texte=\"Trouvez votre stagiaire\"\r\n                classStyle=\"btn btn-success\"\r\n              ></BoutonListe>\r\n            </Nav>\r\n            {/*Affichage du nom de l'utilisateur connecté, lien pour l'acces à sa section admin */}\r\n            {ls.get(\"nom\") ? (\r\n              <>\r\n                <Link\r\n                  to={\"/admin/\" + ls.get(\"nom\") + \"?niveau=\" + ls.get(\"niveau\")}\r\n                  className=\"text-light my-auto\"\r\n                >\r\n                  <h4>\r\n                    Bonjour, {ls.get(\"prenom\")} {ls.get(\"nom\")}\r\n                  </h4>\r\n                </Link>\r\n                <Link\r\n                  to=\"/\"\r\n                  onClick={function () {\r\n                    logout();\r\n                    ls.clear();\r\n                  }}\r\n                >\r\n                  <h1 className=\"text-light\">\r\n                    <BsBoxArrowRight />\r\n                  </h1>\r\n                </Link>\r\n              </>\r\n            ) : formulaire !== \"connexion\" && formulaire !== \"inscription\" ? (\r\n              <Nav>\r\n                <Link to=\"/accescompte/connexion\">\r\n                  <Button size=\"md\" variant=\"light\">\r\n                    Connexion\r\n                  </Button>\r\n                </Link>\r\n                <Link to=\"/accescompte/inscription\">\r\n                  <BoutonInscription\r\n                    labelBouton={\"Inscription\"}\r\n                  ></BoutonInscription>\r\n                </Link>\r\n              </Nav>\r\n            ) : null}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </Row>\r\n      {/* Titre et champs et bouton pour la recherche \r\n      <Row className=\"d-flex\">\r\n        <Col xs={12}>\r\n          <RechercheTrouverVotreStage></RechercheTrouverVotreStage>\r\n        </Col>\r\n      </Row>*/}\r\n      <Row className=\"ml-5 d-flex\">\r\n        <Col xs={12} className=\"ml-5\">\r\n          <h1 className=\"text-light\">{props.titre}</h1>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EnTete;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Hook pour la bannière\r\nfunction PiedDePage() {\r\n  return (\r\n    <Container fluid>\r\n      {/* Menu avec logo et bouton, navbar collapsible */}\r\n      <Row>\r\n        <Col xs={12} className=\"p-0\">\r\n          <Navbar className=\"p-0\">\r\n            <Navbar.Text className=\"justify-content-start\">\r\n              © 2021 EnStage - Projet éducationnel\r\n            </Navbar.Text>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse>\r\n              <Nav className=\"ml-auto\">\r\n                <NavItem>\r\n                  <Link to=\"/\">Accueil</Link>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <Link to=\"/apropos\" className=\"apropos\">\r\n                    À propos\r\n                  </Link>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <Link to=\"/confidentialite\">Confidentialité</Link>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <Link to=\"/contact\">Nous joindre</Link>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <Link to=\"/partenaires\">Partenaires</Link>\r\n                </NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default PiedDePage;\r\n","export default __webpack_public_path__ + \"static/media/publicationDemande.ac333dac.svg\";","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport publicationDemande from \"../../img/publicationDemande.svg\";\r\n\r\n// Hook pour la section Trouvez un stage à la hauteur de vos attentes\r\nfunction PublicationDemandeStage() {\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <Row className=\"p-0\">\r\n        <Col xs={12} md={6} className=\"p-0 my-auto\">\r\n          <div className=\"text-left w-lg-50 p-2  mx-auto\">\r\n            <h1 className=\"mb-5\">\r\n              Trouvez un stage à la hauteur de vos attentes\r\n            </h1>\r\n            <p>\r\n              Pellentesque vehicula fermentum turpis eu cursus. Cras convallis\r\n              tellus et elit aliquet, vitae dignissim ligula sodales.\r\n            </p>\r\n            <ul>\r\n              <li>Cras convallis tellus et elit aliquet 20%</li>\r\n              <li>Suspendisse tincidunt vulputate leo in sollicitudin</li>\r\n              <li>Morbi sodales risus quis orci hendrerit semper</li>\r\n            </ul>\r\n            {/*<NavLink to=\"/accescompte\">\r\n              <Button size=\"md\" className=\"mt-3 publierDemande\">\r\n                Publier une demande de stage maintenant\r\n              </Button>\r\n            </NavLink>*/}\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} md={6} className=\"p-0\">\r\n          <Image fluid src={publicationDemande} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PublicationDemandeStage;\r\n","export default __webpack_public_path__ + \"static/media/publicationOffre.60176320.svg\";","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport publicationOffre from \"../../img/publicationOffre.svg\";\r\n\r\n// Hook pour la section Pourquoi publier une offre de stage\r\nfunction PublicationOffreStage() {\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <Row className=\"p-0\">\r\n        <Col xs={12} md={6} className=\"p-0\">\r\n          <Image fluid src={publicationOffre} />\r\n        </Col>\r\n        <Col xs={12} md={6} className=\"p-0 my-auto\">\r\n          <div className=\"text-left p-2  w-md-50  mx-auto\">\r\n            <h1 className=\"mb-5\">Pourquoi publier une offre de stage?</h1>\r\n            <p>\r\n              Pellentesque vehicula fermentum turpis eu cursus. Cras convallis\r\n              tellus et elit aliquet, vitae dignissim ligula sodales.{\" \"}\r\n            </p>\r\n            <ul>\r\n              <li>Cras convallis tellus et elit aliquet 20%</li>\r\n              <li>Suspendisse tincidunt vulputate leo in sollicitudin</li>\r\n              <li>Morbi sodales risus quis orci hendrerit semper</li>\r\n            </ul>\r\n            {/*<NavLink to=\"/accescompte\">\r\n              <Button size=\"md\" className=\"mt-3 publierOffre\">\r\n                Publier une offre de stage maintenant\r\n              </Button>\r\n            </NavLink>*/}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PublicationOffreStage;\r\n","export default __webpack_public_path__ + \"static/media/schema.9f724492.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Image } from \"react-bootstrap\";\r\n\r\nimport BoutonInscription from \"../boutons/BoutonInscription\";\r\nimport schema from \"../../img/schema.svg\";\r\n\r\n// Hook pour le schéma d'utilisation du site web\r\nfunction UtilisationSchema() {\r\n  return (\r\n    <Col xs={12} className=\"text-center  mb-5\">\r\n      <h2 className=\"mb-5\">Facile à utiliser</h2>\r\n      <p className=\"mb-5\">\r\n        Pellentesque vehicula fermentum turpis eu cursus. Cras convallis tellus\r\n        et elit aliquet, vitae dignissim ligula sodales.\r\n      </p>\r\n      <Image fluid src={schema} alt=\"logo\" className=\"mb-5\" />\r\n      <Link to=\"/accescompte/inscription\">\r\n        <BoutonInscription\r\n          labelBouton={\"Inscrivez-vous maintenant\"}\r\n        ></BoutonInscription>\r\n      </Link>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default UtilisationSchema;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport DemandesGroupCards from \"../components/public/DemandesGroupCards\";\r\nimport OffresGroupCards from \"../components/public/OffresGroupCards\";\r\nimport EnTete from \"../components/public/EnTete\";\r\n//import LiensEmploiListe from \"../components/public/LiensEmploiListe\";\r\nimport PiedDePage from \"../components/public/PiedDePage\";\r\nimport PublicationDemandeStage from \"../components/public/PublicationDemandeStage\";\r\nimport PublicationOffreStage from \"../components/public/PublicationOffreStage\";\r\nimport UtilisationSchema from \"../components/public/UtilisationSchema\";\r\n// Hook pour la page d'accueil\r\nfunction Accueil() {\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      {/* Banniere */}\r\n      <Row className=\"mb-5 \">\r\n        <Col xs={12} className=\"p-0 \">\r\n          <Container\r\n            fluid\r\n            className=\"d-flex flex-column justify-content-between banniereAccueil\"\r\n          >\r\n            <EnTete></EnTete>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/* demandes de stage sous forme de cards */}\r\n      <Row>\r\n        <Col xs={12}>\r\n          <DemandesGroupCards></DemandesGroupCards>\r\n        </Col>\r\n      </Row>\r\n      {/* Publication d'offres de stage */}\r\n      <Row className=\"mt-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PublicationOffreStage></PublicationOffreStage>\r\n        </Col>\r\n      </Row>\r\n      {/* offres de stage sous forme de cards */}\r\n      <Row>\r\n        <Col xs={12}>\r\n          <OffresGroupCards></OffresGroupCards>\r\n        </Col>\r\n      </Row>\r\n      {/* Publication de demande de stage */}\r\n      <Row className=\"mt-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PublicationDemandeStage></PublicationDemandeStage>\r\n        </Col>\r\n      </Row>\r\n      {/* Schéma de l'utilisation */}\r\n      <Row className=\"w-md-50 m-5 mx-auto\">\r\n        <UtilisationSchema></UtilisationSchema>\r\n      </Row>\r\n      {/* Liens des demandes par titre d'emploi \r\n      <Row>\r\n        <Col lg={12} className=\"p-0\">\r\n          <LiensEmploiListe></LiensEmploiListe>\r\n        </Col>\r\n      </Row>*/}\r\n      {/* Pied de page*/}\r\n      <Row className=\"text-center\">\r\n        <Col xs={12} className=\"pb-5\">\r\n          <PiedDePage></PiedDePage>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Accueil;\r\n","export default __webpack_public_path__ + \"static/media/livre.c41f717c.svg\";","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport livre from \"../../img/livre.svg\";\r\n\r\n// Hook pour la section Pourquoi publier une offre de stage\r\nfunction ImageTexte() {\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"p-0\">\r\n        <Col xs={12} md={6} className=\"p-0\">\r\n          <Image fluid src={livre} />\r\n        </Col>\r\n        <Col xs={12} md={6} className=\"my-auto px-auto pt-2\">\r\n          <h4 className=\"text-left w-75 imageText\">\r\n            Etiam mattis est in tellus mattis maximus. Etiam non molestie metus.\r\n            Donec quis mauris metus. Cras tempor varius odio, nec varius nisi\r\n            sollicitudin ac. Praesent vitae elementum augue\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default ImageTexte;\r\n","export default __webpack_public_path__ + \"static/media/forcesavenir.c91338d4.svg\";","export default __webpack_public_path__ + \"static/media/centraide.51a82720.svg\";","export default __webpack_public_path__ + \"static/media/renojouets.0cfe85bd.svg\";","export default __webpack_public_path__ + \"static/media/logoNoir.07aadfe1.svg\";","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport EnTete from \"../components/public/EnTete\";\r\n//import LiensEmploiListe from \"../components/public/LiensEmploiListe\";\r\nimport PiedDePage from \"../components/public/PiedDePage\";\r\nimport ImageTexte from \"../components/public/ImageTexte\";\r\n\r\nimport forcesavenir from \"../img/forcesavenir.svg\";\r\nimport centraide from \"../img/centraide.svg\";\r\nimport renojouets from \"../img/renojouets.svg\";\r\nimport logoNoir from \"../img/logoNoir.svg\";\r\n\r\n// Hook pour la page À Propos\r\nfunction APropos() {\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      {/* Banniere */}\r\n      <Row className=\"mb-5\">\r\n        <Col xs={12} className=\"p-0 banniereAPropos\">\r\n          {/*Trouver un moyen de changer le background image */}\r\n          <Container\r\n            fluid\r\n            className=\"h-100 d-flex flex-column justify-content-between bannierePropos\"\r\n          >\r\n            <EnTete titre=\"À propos\"></EnTete>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/*Texte de présentation avec logo*/}\r\n      <Row className=\"mx-auto\">\r\n        <Col xs={12} md={6} className=\"text-center py-auto\">\r\n          <Image fluid src={logoNoir} alt=\"logo\" />\r\n        </Col>\r\n        <Col xs={12} md={6} className=\"my-auto\">\r\n          <p className=\"pt-5\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc\r\n            bibendum ex in ante condimentum, ac pellentesque elit condimentum.\r\n            Nullam auctor congue tellus, quis pulvinar ligula consequat ac. Cras\r\n            sit amet ligula id ipsum pharetra aliquet ac in ipsum. Ut consequat\r\n            nisi vitae magna tristique faucibus vitae quis lorem. Nunc ex\r\n            tellus, mattis vel congue eu, pulvinar sit amet nisl. Aliquam\r\n            elementum sapien sed augue eleifend cursus. Suspendisse nisi tellus,\r\n            bibendum at auctor eget, convallis non enim. Quisque erat nisi,\r\n            convallis vel tortor in, dapibus pretium enim. Cras malesuada\r\n            ultrices venenatis.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      {/* Valeurs*/}\r\n      <Row className=\"mx-auto\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <Container fluid>\r\n            <Row className=\"text-center\">\r\n              <Col xs={12} md={4}>\r\n                <Image fluid src={forcesavenir} />\r\n                <h4 className=\"m-lg-4\">FORCES AVENIR</h4>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc\r\n                  bibendum ex in ante condimentum, ac pellentesque elit\r\n                  condimentum. Nullam auctor congue tellus, quis pulvinar ligula\r\n                  consequat ac. Cras sit amet ligula id ipsum pharetra aliquet\r\n                  ac in ipsum. Ut consequat nisi vitae magna tristique faucibus\r\n                  vitae quis lorem.\r\n                </p>\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Image fluid src={centraide} />\r\n                <h4 className=\"m-lg-4\">CENTRAIDE</h4>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc\r\n                  bibendum ex in ante condimentum, ac pellentesque elit\r\n                  condimentum. Nullam auctor congue tellus, quis pulvinar ligula\r\n                  consequat ac. Cras sit amet ligula id ipsum pharetra aliquet\r\n                  ac in ipsum. Ut consequat nisi vitae magna tristique faucibus\r\n                  vitae quis lorem.\r\n                </p>\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Image fluid src={renojouets} />\r\n                <h4 className=\"m-lg-4\">FONDATION RÉNO-JOUETS</h4>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc\r\n                  bibendum ex in ante condimentum, ac pellentesque elit\r\n                  condimentum. Nullam auctor congue tellus, quis pulvinar ligula\r\n                  consequat ac. Cras sit amet ligula id ipsum pharetra aliquet\r\n                  ac in ipsum. Ut consequat nisi vitae magna tristique faucibus\r\n                  vitae quis lorem.\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/*Texte*/}\r\n      <Row className=\"mx-auto mt-5 text-light fondBleu\">\r\n        <Col lg={12} className=\"p-5\">\r\n          <h3 className=\"p-md-auto\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit\r\n          </h3>\r\n          <h4 className=\" p-md-auto\">\r\n            Etiam mattis est in tellus mattis maximus. Etiam non molestie metus.\r\n            Donec quis mauris metus. Cras tempor varius odio, nec varius nisi\r\n            sollicitudin ac. Praesent vitae elementum augue, non suscipit\r\n            turpis. Etiam blandit vitae quam nec porttitor. Duis libero nunc,\r\n            iaculis at diam in, scelerisque dapibus mauris. Aenean faucibus est\r\n            lectus, elementum pellentesque nisi cursus at. Maecenas nec\r\n            elementum enim, vel egestas nisi.\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      {/* Image et texte */}\r\n      <Row className=\"bg-dark mx-auto text-light\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <ImageTexte></ImageTexte>\r\n        </Col>\r\n      </Row>\r\n      {/* bannière publicitaire */}\r\n      <Row className=\"m-5 bkg-dark bannierePub\">\r\n        <Col xs={12} className=\"m-5\">\r\n          {/***************background d'une image de publicité, voir si ajouter le lien pour postuler */}\r\n        </Col>\r\n      </Row>\r\n      {/* Liens des demandes par titre d'emploi\r\n      <Row>\r\n        <Col lg={12} className=\"p-0\">\r\n          <LiensEmploiListe></LiensEmploiListe>\r\n        </Col>\r\n      </Row> */}\r\n      {/* Pied de page*/}\r\n      <Row className=\"my-auto mx-auto\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PiedDePage></PiedDePage>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default APropos;\r\n","import React from \"react\";\r\n\r\n// Hook pour l'affichage de la politique et confidentialité\r\nfunction Confidentialite() {\r\n  return <h1>Hook pour l'affichage de la politique et confidentialité</h1>;\r\n}\r\n\r\nexport default Confidentialite;\r\n","import React from \"react\";\r\n\r\n// Hook pour l'affichage d'un formulaire de contact\r\nfunction Politique() {\r\n  return <h1>Hook pour l'affichage d'un formulaire de contact</h1>;\r\n}\r\n\r\nexport default Politique;\r\n","import React from \"react\";\r\n\r\n// Hook pour l'affichage des partenaires\r\nfunction Partenaires() {\r\n  return <h1>Hook pour l'affichage des partenaires</h1>;\r\n}\r\n\r\nexport default Partenaires;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useSecteurRecherche } from \"../../hooksperso/useSecteurRecherche\";\r\n\r\n// Hook pour le bouton Trouvez votre stagiaire\r\nfunction SecteursActivite(props) {\r\n  //Variable pour le tableau de secteurs d'activité dans la collection secteursActivites\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage pour l'appel à l'API\r\n    getSecteurs();\r\n  }, []);\r\n\r\n  //Fonction pour l'appel à l'API\r\n  async function getSecteurs() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_SECTEURS\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"details fondBleu\">\r\n      <h4 className=\"text-light text-center\">Secteurs d'activité </h4>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <tbody>\r\n          {donneesRecues.map((item) => (\r\n            <tr key={item.nom}>\r\n              <td></td>\r\n              <td className=\"w-100 text-light\">\r\n                <p className=\"text-light curseur\">{item.nom}</p>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecteursActivite;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport { Container, Row, Col, Image, ListGroup } from \"react-bootstrap\";\r\n\r\nimport BoutonPostuler from \"../boutons/BoutonPostuler\";\r\n// Hook pour les informations d'une offre de stage en détails\r\nfunction OffreDetails() {\r\n  //Variable pour connaître à quelle endroit nous sommes, pour aller chercher des informations dans l'url\r\n  let location = useLocation(); /*variable de la page où je me trouve */\r\n  const [objetRecu, setObjetRecu] = useState({});\r\n  const [tabCompetences, setTabCompetences] = useState([]);\r\n\r\n  //Fonction pour ajuster l'url lors de l'appel à l'API, avec ID pour affichage des détails ou sans Id pour afficher la liste des demandes\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage\r\n    getDetailsOffre();\r\n  }, []);\r\n  //Fonction pour récupérer l'id\r\n  function getId() {\r\n    //Variable pour récupérer l'id dans l'url, avec la propriété search\r\n    var PropsSearch = location.search; //ex.:?id=60577b93a453cb7841a5ed40\r\n    var stringId = PropsSearch.replace(\"?id=\", \"\");\r\n    return stringId;\r\n  }\r\n  //Fonction pour l'appel à l'API\r\n\r\n  async function getDetailsOffre() {\r\n    var idChoosen = getId();\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_OFFRES +\r\n          \"/\" +\r\n          idChoosen\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setObjetRecu(reponseDeApi);\r\n      setTabCompetences(reponseDeApi.competences);\r\n\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour appliquer la langue et le format de la date\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d);\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n  return (\r\n    <Container fluid className=\"details\">\r\n      {/*En-tête de formation */}\r\n      <Row>\r\n        {/*Logo de l'entreprise*/}\r\n        <Col xs={12} lg={3} className=\"p-1\">\r\n          <Image\r\n            fluid\r\n            src=\"https://d2q79iu7y748jz.cloudfront.net/s/_squarelogo/03701aaf050c38cc94084ad3e3902de1\"\r\n          />\r\n          <h5>{objetRecu.entreprise}</h5>\r\n          <p>{objetRecu.ville}</p>\r\n        </Col>\r\n        {/*Détails du stage */}\r\n        <Col xs={12} lg={9}>\r\n          <Container fluid className=\"border border-secondary p-3 h-100\">\r\n            <Row>\r\n              <Col xs={6} className=\"text-left mb-5 mx-0 px-0\">\r\n                <h4>{objetRecu.titre}</h4>\r\n              </Col>\r\n              <Col xs={6} className=\"text-right mb-5 mx-0 px-0\">\r\n                <p>{formatDate(objetRecu.dateParution)}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"text-left\">\r\n              <Col xs={12} lg={6}>\r\n                <strong>Date de début: </strong>\r\n                <p>{formatDate(objetRecu.dateDebut)}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Possibilité d'emploi: </strong>\r\n                {objetRecu.emploiApresStage ? (\r\n                  <p className=\"d-inline\"> OUI</p>\r\n                ) : (\r\n                  <p className=\"d-inline\"> NON</p>\r\n                )}\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Date de fin: </strong>\r\n                <p>{formatDate(objetRecu.dateFin)}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Rémunération: </strong>\r\n                <p className=\"d-inline\">{objetRecu.remunere}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Nombre de semaines: </strong>\r\n                <p className=\"d-inline\">{objetRecu.duree}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Heures/semaine: </strong>\r\n                <p className=\"d-inline\">{objetRecu.nbHeuresSemaine}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={12} className=\"w-100 mt-5\">\r\n                <BoutonPostuler></BoutonPostuler>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/*Détails de la demande de stage */}\r\n      <Row className=\"text-left\">\r\n        <Col lg={12}>\r\n          <h4 className=\"p-4\">Description du stage offert</h4>\r\n          <p>{objetRecu.description}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-left\">\r\n        <Col lg={12} className=\"p-4\">\r\n          <h4 className=\"p-4\">Compétences recherchées</h4>\r\n\r\n          <ListGroup>\r\n            {tabCompetences.map((item, i) => (\r\n              <ListGroup.Item key={item + i}>\r\n                <p>{item}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-left\">\r\n        <Col lg={12}>\r\n          <h4 className=\"p-4\">Autres informations</h4>\r\n          <p>{objetRecu.autresInformations}</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OffreDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport EnTete from \"../components/public/EnTete\";\r\n//import LiensEmploiListe from \"../components/public/LiensEmploiListe\";\r\nimport OffreCarte from \"../components/public/OffreCarte\";\r\nimport DemandesGroupCards from \"../components/public/DemandesGroupCards\";\r\nimport PiedDePage from \"../components/public/PiedDePage\";\r\nimport PublicationDemandeStage from \"../components/public/PublicationDemandeStage\";\r\nimport PublicationOffreStage from \"../components/public/PublicationOffreStage\";\r\nimport SecteursActivite from \"../components/public/SecteursActivite\";\r\nimport OffreDetails from \"../components/public/OffreDetails\";\r\n\r\n// Hook pour les offres de stage, liste des offres des entreprises\r\nfunction OffresStageListe(props) {\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n  //Variable d'état pour charger toutes la liste des demandes de stage\r\n  const [chargertout, setChargertout] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //appelle la fonction getOffresStage pour l'appel à l'API\r\n    getOffresStage();\r\n  }, []);\r\n  //Fonction pour l'affichage des demandes\r\n  function affichageOffres() {\r\n    //Trier le tableau de la plus récente à la plus ancienne\r\n    donneesRecues.sort(function (a, b) {\r\n      a = new Date(a.dateParution);\r\n      b = new Date(b.dateParution);\r\n      return b < a ? -1 : a > b ? 1 : 0;\r\n    });\r\n    return chargertout\r\n      ? donneesRecues\r\n          .filter((donnee) => donnee.actif && donnee.verifie)\r\n          .map((item) => (\r\n            <OffreCarte\r\n              id={item._id}\r\n              titre={item.titre}\r\n              entreprise={item.entreprise}\r\n              ville={item.ville}\r\n              description={item.description}\r\n              dateParution={formatDate(item.dateParution)}\r\n              infos={item.informationsSupplementaires}\r\n            ></OffreCarte>\r\n          ))\r\n      : donneesRecues\r\n          .filter((donnee) => donnee.actif && donnee.verifie)\r\n          .map((item, i) =>\r\n            i < 4 ? (\r\n              <OffreCarte\r\n                id={item._id}\r\n                titre={item.titre}\r\n                entreprise={item.entreprise}\r\n                ville={item.ville}\r\n                description={item.description}\r\n                dateParution={formatDate(item.dateParution)}\r\n                infos={item.informationsSupplementaires}\r\n              ></OffreCarte>\r\n            ) : null\r\n          );\r\n  }\r\n  //Fonction pour l'appel à l'API\r\n  async function getOffresStage() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_OFFRES\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour appliquer la langue et le format de la date\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d);\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      {/* Banniere */}\r\n      <Row className=\"mb-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <Container\r\n            fluid\r\n            className=\"d-flex flex-column justify-content-between banniereDemandes\"\r\n          >\r\n            <EnTete titre=\"Offres de stage\"></EnTete>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/* Liste des entreprises */}\r\n      <Row className=\"mb-5\">\r\n        <Col\r\n          xs={{ span: 12, order: 2 }}\r\n          md={{ span: 8, order: 1 }}\r\n          className=\"pr-5 text-center\"\r\n        >\r\n          {props.location.search !== \"\" ? (\r\n            <OffreDetails id={donneesRecues._id}></OffreDetails>\r\n          ) : (\r\n            <>\r\n              {/*Affichage des 4 demandes les plus récente, renverser le tableau et limiter au nombre de 4 */}\r\n              {affichageOffres()}\r\n              {!chargertout ? (\r\n                <Button\r\n                  variant=\"danger\"\r\n                  className=\"mt-5\"\r\n                  onClick={() => setChargertout(true)}\r\n                >\r\n                  Charger plus\r\n                </Button>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        {/* Liste des secteurs d'activités */}\r\n        <Col xs={{ span: 12, order: 1 }} md={{ spna: 4, order: 2 }}>\r\n          <SecteursActivite></SecteursActivite>\r\n        </Col>\r\n      </Row>\r\n      {/* Publication d'offres de stage */}\r\n      <Row className=\"mt-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PublicationOffreStage></PublicationOffreStage>\r\n        </Col>\r\n      </Row>\r\n      {/* Demande de stage sous forme de cards */}\r\n      <Row className=\"m-5\">\r\n        <Col xs={12}>\r\n          <DemandesGroupCards></DemandesGroupCards>\r\n        </Col>\r\n      </Row>\r\n      {/* Publication de demande de stage */}\r\n      <Row className=\"mt-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PublicationDemandeStage></PublicationDemandeStage>\r\n        </Col>\r\n      </Row>\r\n      {/* bannière publicitaire */}\r\n      <Row className=\"m-5 bkg-dark bannierePub\">\r\n        <Col lg={12} className=\"m-5\">\r\n          {/*background d'une image de publicité, voir si ajouter le lien pour postuler */}\r\n        </Col>\r\n      </Row>\r\n      {/* Liens des demandes par titre d'emploi \r\n      <Row>\r\n        <Col xs={12} className=\"p-0\">\r\n          <LiensEmploiListe></LiensEmploiListe>\r\n        </Col>\r\n      </Row>*/}\r\n      {/* Pied de page*/}\r\n      <Row className=\"text-center\">\r\n        <Col xs={12} className=\"pb-5\">\r\n          <PiedDePage></PiedDePage>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default OffresStageListe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\nimport { Container, Row, Col, Image, ListGroup } from \"react-bootstrap\";\r\n\r\nimport BoutonContactCandidat from \"../boutons/BoutonContactCandidat\";\r\n// Hook pour les informations d'une demande de stage en détails\r\nfunction DemandeDetails() {\r\n  //Variable pour connaître à quelle endroit nous sommes, pour aller chercher des informations dans l'url\r\n  let location = useLocation(); /*variable de la page où je me trouve */\r\n\r\n  const [objetRecu, setObjetRecu] = useState({});\r\n  const [tabCompetences, setTabCompetences] = useState([]);\r\n  const [tabFormations, setTabFormations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage\r\n    getDetailsDemande();\r\n  }, []);\r\n\r\n  //Fonction pour récupérer l'id\r\n  function getId() {\r\n    //Variable pour récupérer l'id dans l'url, avec la propriété search\r\n    var PropsSearch = location.search; //ex.:?id=60577b93a453cb7841a5ed40\r\n    var stringId = PropsSearch.replace(\"?id=\", \"\");\r\n\r\n    return stringId;\r\n  }\r\n  //Fonction pour l'appel à l'API\r\n\r\n  async function getDetailsDemande() {\r\n    var idChoosen = getId();\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_DEMANDES +\r\n          \"/\" +\r\n          idChoosen\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setObjetRecu(reponseDeApi);\r\n      setTabCompetences(reponseDeApi.competences);\r\n      setTabFormations(reponseDeApi.autresFormations);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour appliquer la langue et le format de la date\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d).add(1, \"days\");\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"details\">\r\n      {/*En-tête de formation */}\r\n      <Row>\r\n        {/*Logo de l'établissement d'études*/}\r\n        <Col xs={12} lg={3} className=\"p-1\">\r\n          <Image\r\n            fluid\r\n            src=\"https://upload.wikimedia.org/wikipedia/fr/d/dd/C%C3%A9gep_Trois-Rivi%C3%A8res_Logo.jpg\"\r\n          />\r\n          <h5>Formation:</h5>\r\n          <p>{objetRecu.programmeSuivi}</p>\r\n        </Col>\r\n        {/*Détails formation */}\r\n        <Col xs={12} lg={9}>\r\n          <Container fluid className=\"border border-secondary p-3 h-100\">\r\n            <Row>\r\n              <Col xs={6} className=\"text-left mb-5 mx-0 px-0\">\r\n                <h4>{objetRecu.titre}</h4>\r\n              </Col>\r\n              <Col xs={6} className=\"text-right mb-5 mx-0 px-0\">\r\n                <p>{formatDate(objetRecu.dateParution)}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"text-left\">\r\n              <Col xs={12} lg={6}>\r\n                <strong>Date de début: </strong>\r\n                <p>{formatDate(objetRecu.dateDebut)}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Horaire: </strong>\r\n                <p className=\"d-inline\">{objetRecu.typestage}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Date de fin: </strong>\r\n                <p>{formatDate(objetRecu.dateFin)}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Rémunération: </strong>\r\n                <p className=\"d-inline\">{objetRecu.remunere}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Nombre de semaines: </strong>\r\n                <p className=\"d-inline\">{objetRecu.duree}</p>\r\n              </Col>\r\n              <Col xs={12} lg={6}>\r\n                <strong>Heures/semaine: </strong>\r\n                <p className=\"d-inline\">{objetRecu.nbHeuresSemaine}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={12} className=\"w-100 mt-5\">\r\n                <BoutonContactCandidat></BoutonContactCandidat>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/*Détails de la demande de stage */}\r\n      <Row className=\"text-left\">\r\n        <Col lg={12}>\r\n          <h4 className=\"p-4\">Description du stage recherché</h4>\r\n          <p>{objetRecu.description}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-left\">\r\n        <Col lg={12} className=\"p-4\">\r\n          <h4 className=\"p-4\">Compétences acquises</h4>\r\n\r\n          <ListGroup>\r\n            {tabCompetences.map((item, i) => (\r\n              <ListGroup.Item key={item + i}>\r\n                <p>{item}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-left\">\r\n        <Col lg={12} className=\"p-4\">\r\n          <h4 className=\"p-4\">Autres Formations</h4>\r\n          <ListGroup>\r\n            {tabFormations.map((item, i) => (\r\n              <ListGroup.Item key={item + i}>\r\n                <p>{item}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-left\">\r\n        <Col lg={12}>\r\n          <h4 className=\"p-4\">Autres informations</h4>\r\n          <p>{objetRecu.autresInformations}</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DemandeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport EnTete from \"../components/public/EnTete\";\r\n//import LiensEmploiListe from \"../components/public/LiensEmploiListe\";\r\nimport DemandeCarte from \"../components/public/DemandeCarte\";\r\nimport DemandeDetails from \"../components/public/DemandeDetails\";\r\nimport OffresGroupCards from \"../components/public/OffresGroupCards\";\r\nimport PiedDePage from \"../components/public/PiedDePage\";\r\nimport PublicationDemandeStage from \"../components/public/PublicationDemandeStage\";\r\nimport PublicationOffreStage from \"../components/public/PublicationOffreStage\";\r\nimport SecteursActivite from \"../components/public/SecteursActivite\";\r\nimport useSecteurRecherche from \"../../src/hooksperso/useSecteurRecherche\";\r\n\r\n// Hook pour les demandes de stage, liste des candidats\r\nfunction DemandesStageListe(props) {\r\n  //Constante pour les données reçues par l'API\r\n  //L'utilisation du useState, fera de nouveau le rendu à chaque fois qu'elle est modifiée\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n  //Variable d'état pour charger toutes la liste des demandes de stage\r\n  const [chargertout, setChargertout] = useState(false);\r\n\r\n  //Utiliser useEffect, exécute quelquechose après chaque affichage\r\n  //Remplace la combinaison de componentDidMount, componentDidUpdate, et componentWillUnmount.\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage pour l'appel à l'API\r\n    getDemandesStage();\r\n  }, []);\r\n\r\n  //Fonction pour l'affichage des demandes\r\n  function affichageDemandes() {\r\n    //Trier le tableau de la plus récente à la plus ancienne\r\n    donneesRecues.sort(function (a, b) {\r\n      a = new Date(a.dateParution);\r\n      b = new Date(b.dateParution);\r\n      return b < a ? -1 : a > b ? 1 : 0;\r\n    });\r\n    return chargertout\r\n      ? donneesRecues\r\n          .filter((donnee) => donnee.actif && donnee.valide && !donnee.supprime)\r\n          .map((item) => (\r\n            <DemandeCarte\r\n              id={item._id}\r\n              key={\"ToutListe\" + item._id}\r\n              dateParution={formatDate(item.dateParution)}\r\n              titre={item.titre}\r\n              ville={item.ville}\r\n              formation={item.programmeSuivi}\r\n              description={item.description}\r\n            ></DemandeCarte>\r\n          ))\r\n      : donneesRecues\r\n          .filter((donnee) => donnee.actif && donnee.valide && !donnee.supprime)\r\n          .map((item, i) =>\r\n            i < 4 ? (\r\n              <DemandeCarte\r\n                id={item._id}\r\n                key={\"keyListe\" + item._id}\r\n                dateParution={formatDate(item.dateParution)}\r\n                titre={item.titre}\r\n                ville={item.ville}\r\n                formation={item.programmeSuivi}\r\n                description={item.description}\r\n              ></DemandeCarte>\r\n            ) : null\r\n          );\r\n  }\r\n  //Fonction pour l'appel à l'API\r\n  async function getDemandesStage() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_DEMANDES\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour appliquer la langue et le format de la date\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d);\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      {/* Banniere */}\r\n      <Row className=\"mb-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <Container\r\n            fluid\r\n            className=\"d-flex flex-column justify-content-between banniereDemandes\"\r\n          >\r\n            <EnTete titre=\"Candidats\"></EnTete>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/* Liste des candidats */}\r\n      {/*Un affichage conditionnel, si l'url contient un search (?id=) afficher la section détails de la carte sélectionné sinon afficher la liste des cartes*/}\r\n      <Row className=\"m-5\">\r\n        <Col\r\n          xs={{ span: 12, order: 2 }}\r\n          md={{ span: 8, order: 1 }}\r\n          className=\"pr-3 text-center\"\r\n        >\r\n          {props.location.search !== \"\" ? (\r\n            <DemandeDetails id={donneesRecues._id}></DemandeDetails>\r\n          ) : (\r\n            <>\r\n              {/*Affichage des 4 demandes les plus récente, renverser le tableau et limiter au nombre de 4 */}\r\n              {affichageDemandes()}\r\n              {!chargertout ? (\r\n                <Button\r\n                  variant=\"danger\"\r\n                  className=\"mt-5 boutonCharger\"\r\n                  onClick={() => setChargertout(true)}\r\n                >\r\n                  Charger plus\r\n                </Button>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </Col>\r\n        {/* Liste des secteurs d'activités */}\r\n        <Col xs={{ span: 12, order: 1 }} md={{ spna: 4, order: 2 }}>\r\n          <SecteursActivite></SecteursActivite>\r\n        </Col>\r\n      </Row>\r\n      {/* Publication d'offres de stage */}\r\n      <Row className=\"mt-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PublicationOffreStage></PublicationOffreStage>\r\n        </Col>\r\n      </Row>\r\n      {/* Demande de stage sous forme de cards */}\r\n      <Row className=\"m-5\">\r\n        <Col xs={12}>\r\n          <OffresGroupCards></OffresGroupCards>\r\n        </Col>\r\n      </Row>\r\n      {/* Publication de demande de stage */}\r\n      <Row className=\"mt-5\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PublicationDemandeStage></PublicationDemandeStage>\r\n        </Col>\r\n      </Row>\r\n      {/* bannière publicitaire */}\r\n      <Row className=\"m-5 bkg-dark bannierePub\">\r\n        <Col xs={12} className=\"m-5\">\r\n          {/*background d'une image de publicité, voir si ajouter le lien pour postuler */}\r\n        </Col>\r\n      </Row>\r\n      {/* Liens des demandes par titre d'emploi\r\n      <Row>\r\n        <Col xs={12} className=\"p-0\">\r\n          <LiensEmploiListe></LiensEmploiListe>\r\n        </Col>\r\n      </Row> */}\r\n      {/* Pied de page*/}\r\n      <Row className=\"text-center\">\r\n        <Col xs={12} className=\"pb-5\">\r\n          <PiedDePage></PiedDePage>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DemandesStageListe;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n//Pour le jeton de session\r\nimport { login, logout } from \"../../utils/index\";\r\n\r\n// Hook pour le bouton Trouvez votre stage\r\nfunction FormulaireConnexion() {\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n\r\n  console.log(\"connexion\" + ls.get(\"nom\"));\r\n  //variable pour les utilisateurs\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n  const [userTrue, setUserTrue] = useState(false);\r\n  //Fonction éxécuté à chaque appel du composant\r\n  useEffect(() => {\r\n    //appelle la fonction pour les données de l'API\r\n    getUtilisateurs();\r\n  }, []);\r\n  //Données de la base de donnée\r\n  async function getUtilisateurs() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_UTILISATEURS\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreurdsas\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function authentification() {\r\n    //Prend les valeurs des inputs et entre les valeurs avec leurs clés dans le local storage\r\n    const nomUtilisateur = document.getElementById(\"nom\").value;\r\n    const prenomUtilisateur = document.getElementById(\"prenom\").value;\r\n    const motDePasse = document.getElementById(\"password\").value;\r\n    //Entrer les valeurs entrée dans le formulaire dans le localstorage\r\n    ls.set(\"nom\", nomUtilisateur);\r\n    ls.set(\"prenom\", prenomUtilisateur);\r\n    ls.set(\"password\", motDePasse);\r\n\r\n    //réinitialise\r\n    var utilisateurExistant = false;\r\n    // Boucle pour vérifier que l'utilisateur existe\r\n    donneesRecues.map((item) => {\r\n      //L'utilisateur possède les valeurs entrées en input du formulaire\r\n      if (\r\n        ls.get(\"nom\") === item.nom &&\r\n        ls.get(\"prenom\") === item.prenom &&\r\n        ls.get(\"password\") === item.password\r\n      ) {\r\n        console.log(\"L'utilisateur existe\");\r\n        utilisateurExistant = true;\r\n        //Local storage pour le niveau d'acces et l'identifiant\r\n        ls.set(\"niveau\", item.niveau.toString());\r\n        ls.set(\"id\", item._id);\r\n      }\r\n    });\r\n    if (utilisateurExistant) {\r\n      setUserTrue(\"true\");\r\n      console.log(\"niveau \" + ls.get(\"niveau\"));\r\n      login();\r\n    } else {\r\n      alert(\"L'utilisateur n'existe pas\");\r\n      logout();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form className=\"mx-auto mb-5\">\r\n        <Form.Group controlId=\"nom\">\r\n          <Form.Label>Nom</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Nom\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"prenom\">\r\n          <Form.Label>Prénom</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Prénom\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Mot de Passe</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Mot de Passe\" />\r\n        </Form.Group>\r\n        <Button variant=\"btn btn-primary\" onClick={() => authentification()}>\r\n          Connexion\r\n        </Button>\r\n      </Form>\r\n\r\n      {userTrue ? (\r\n        <Redirect\r\n          to={\r\n            \"admin/\" + ls.get(\"nom\") + \"?niveau=\" + ls.get(\"niveau\").toString()\r\n          }\r\n        />\r\n      ) : (\r\n        <Redirect to=\"/accescompte\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormulaireConnexion;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\n// Hook pour le formulaire d'inscription d'un nouvel utilisateur\r\nfunction FormulaireInscription() {\r\n  //Variable pour la validation du formulaire\r\n  const [errors, setErrors] = useState({});\r\n  //Variable pour la valeur du statut de l'utilisateur false=entreprise et true=étudiant\r\n  const [statut, setStatut] = useState(null);\r\n  //Variable pour vérifier le format des entrées du courriel et du numéro de téléphone\r\n  const [validEmail, setValidEmail] = useState(null);\r\n  const [validTelephone, setValidTelephone] = useState(null);\r\n\r\n  //Fonction pour vérifier si le formulaire est valide\r\n  function formulaireEstValide(\r\n    nom,\r\n    prenom,\r\n    email,\r\n    password,\r\n    confirmationPassword,\r\n    niveau,\r\n    institution,\r\n    adresse,\r\n    ville,\r\n    region,\r\n    telephone\r\n  ) {\r\n    const _errors = {};\r\n\r\n    if (!nom) _errors.nom = \"Le nom est obligatoire\";\r\n    if (!prenom) _errors.prenom = \"Le prenom est obligatoire\";\r\n    if (!email) _errors.email = \"L'adresse courriel est obligatoire\";\r\n    if (!validEmail) {\r\n      _errors.checkEmail =\r\n        \"Le format du courriel n'est pas valide. Utiliser le format (abc@abc.com)\";\r\n    }\r\n    if (!password) _errors.password = \"Le mot de passe est obligatoire\";\r\n    if (!confirmationPassword)\r\n      _errors.confirmationPassword =\r\n        \"La confirmation du mot de passe est obligatoire\";\r\n    if (password !== confirmationPassword)\r\n      _errors.samePassword =\r\n        \"La confirmation du mot de passe est différent du mot de passe\";\r\n    if (niveau == null)\r\n      _errors.niveau = \"Choisir votre statut: entreprise ou étudiant\";\r\n    if (!institution)\r\n      _errors.institution =\r\n        \"Le nom de L'école ou de l'entreprise est obligatoire\";\r\n    if (!adresse) _errors.adresse = \"L'adresse est obligatoire\";\r\n    if (!ville) _errors.ville = \"La ville est obligatoire\";\r\n    if (!region) _errors.region = \"La région est obligatoire\";\r\n    if (!telephone)\r\n      _errors.telephone = \"Le numéro de téléphone est obligatoire\";\r\n    if (!validTelephone) {\r\n      _errors.checkTelephone =\r\n        \"Le format du numéro de téléphone n'est pas valide. Utiliser le format ((888)123-4567)\";\r\n    }\r\n    setErrors(_errors);\r\n    console.log(errors.checkEmail);\r\n    //Retourne true si la longueur de l'objet contenant les erreurs = 0\r\n    return Object.keys(_errors).length === 0;\r\n  }\r\n  //Fonction pour vérifier le format du courriel retourne true si le format est correct\r\n  function checkEmail(email) {\r\n    const re = /^[a-zA-Z0-9]+@+[a-zA-Z0-9]+.+[A-z]/;\r\n    const reValid = re.test(email);\r\n    setValidEmail(reValid);\r\n  }\r\n  //Fonction pour vérifier le format du numéro de téléphone retourne true si le format est correct\r\n  function checkTelephone(tel) {\r\n    const re = /^[+]*[(][0-9]{3}[)][0-9]{3}-[0-9]{4}/;\r\n    const reValid = re.test(tel);\r\n    setValidTelephone(reValid);\r\n  }\r\n  //Fonction qui récupère les valeurs entrées dans les input\r\n  function handleAdd(event) {\r\n    event.preventDefault();\r\n\r\n    const nom = document.getElementById(\"nomId\").value;\r\n    const prenom = document.getElementById(\"prenomId\").value;\r\n    const email = document.getElementById(\"emailId\").value;\r\n    checkEmail(email);\r\n    const password = document.getElementById(\"passwordId\").value;\r\n    const confirmationPassword = document.getElementById(\r\n      \"confirmationPasswordId\"\r\n    ).value;\r\n    const niveau = statut;\r\n    const institution = document.getElementById(\"institutionId\").value;\r\n    const adresse = document.getElementById(\"adresseId\").value;\r\n    const ville = document.getElementById(\"villeId\").value;\r\n    const region = document.getElementById(\"regionId\").value;\r\n    const telephone = document.getElementById(\"telephoneId\").value;\r\n    const web = document.getElementById(\"webId\").value;\r\n\r\n    //Si la validation du formulaire retourne true nous pouvons ajouter le nouvel utilisateur dans la base de données\r\n    if (\r\n      formulaireEstValide(\r\n        nom,\r\n        prenom,\r\n        email,\r\n        password,\r\n        confirmationPassword,\r\n        niveau,\r\n        institution,\r\n        adresse,\r\n        ville,\r\n        region,\r\n        telephone,\r\n        web\r\n      )\r\n    ) {\r\n      addUtilisateur();\r\n    }\r\n  }\r\n  //Fonction pour l'ajout d'un nouvel utilisateur après validation des champs du formulaire\r\n  function addUtilisateur() {\r\n    console.log(\"ajout réussi\");\r\n  }\r\n  //Fonction pour vérifier le format(Ajouter car la validation n'était pas fait au premier submit)\r\n  function formatEmail() {\r\n    const email = document.getElementById(\"emailId\").value;\r\n    checkEmail(email);\r\n  }\r\n  //Fonction pour vérifier le format(Ajouter car la validation n'était pas fait au premier submit)\r\n  function formatTelephone() {\r\n    const tel = document.getElementById(\"telephoneId\").value;\r\n    checkTelephone(tel);\r\n  }\r\n  return (\r\n    <Form onSubmit={handleAdd} className=\"formInscription mx-auto mb-5\">\r\n      {/*Utiliser isInvalid props pour afficher les erreurs*/}\r\n      <Form.Group controlId=\"nomId\">\r\n        <Form.Label>Nom</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Nom\" isInvalid={!!errors.nom} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.nom}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"prenomId\">\r\n        <Form.Label>Prénom</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Prénom\"\r\n          isInvalid={!!errors.prenom}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.prenom}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"emailId\">\r\n        <Form.Label>Email address</Form.Label>\r\n        {/*type=\"text\", pour ne pas avoir la validation du navigateur */}\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"name@example.com\"\r\n          onBlur={formatEmail}\r\n          isInvalid={!!errors.email || !!errors.checkEmail}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.email}\r\n        </Form.Control.Feedback>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.checkEmail}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"passwordId\">\r\n        <Form.Label>Mot de Passe</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Mot de Passe\"\r\n          isInvalid={!!errors.password}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.password}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"confirmationPasswordId\">\r\n        <Form.Label>Confirmer votre mot de Passe</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Mot de Passe\"\r\n          isInvalid={!!errors.confirmationPassword || !!errors.samePassword}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.confirmationPassword}\r\n        </Form.Control.Feedback>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.samePassword}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"statutId\">\r\n        <Form.Check\r\n          type=\"radio\"\r\n          name=\"niveau\"\r\n          value={false}\r\n          label=\"Étudiant\"\r\n          onClick={() => setStatut(false)}\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          name=\"niveau\"\r\n          value={true}\r\n          label=\"Entreprise\"\r\n          onClick={() => setStatut(true)}\r\n        />\r\n      </Form.Group>\r\n      {statut == null ? (\r\n        <Form.Text className=\"text-danger\">{errors.niveau}</Form.Text>\r\n      ) : null}\r\n\r\n      <Form.Group controlId=\"institutionId\">\r\n        <Form.Label>Nom de l'école ou de l'entreprise</Form.Label>\r\n        <Form.Control type=\"text\" isInvalid={!!errors.institution} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.institution}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"adresseId\">\r\n        <Form.Label>Adresse</Form.Label>\r\n        <Form.Control type=\"text\" isInvalid={!!errors.adresse} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.institution}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"villeId\">\r\n        <Form.Label>Ville</Form.Label>\r\n        <Form.Control type=\"text\" isInvalid={!!errors.ville} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.ville}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"regionId\">\r\n        <Form.Label>Région</Form.Label>\r\n        <Form.Control type=\"text\" isInvalid={!!errors.region} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.region}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"telephoneId\">\r\n        <Form.Label>Téléphone</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          onBlur={formatTelephone}\r\n          isInvalid={!!errors.telephone || !!errors.checkTelephone}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.telephone}\r\n        </Form.Control.Feedback>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.checkTelephone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      {/*Le site web n'est pas obligatoire */}\r\n      <Form.Group controlId=\"webId\">\r\n        <Form.Label>Site web</Form.Label>\r\n        <Form.Control type=\"text\" />\r\n      </Form.Group>\r\n      <Button type=\"submit\">Soumettre</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default FormulaireInscription;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport EnTete from \"../components/public/EnTete\";\r\n//import LiensEmploiListe from \"../components/public/LiensEmploiListe\";\r\nimport PiedDePage from \"../components/public/PiedDePage\";\r\nimport ImageTexte from \"../components/public/ImageTexte\";\r\nimport FormulaireConnexion from \"../components/public/FormulaireConnexion\";\r\nimport FormulaireInscription from \"../components/public/FormulaireInscription\";\r\n\r\n// Hook pour les formulaires de connexion ou d'inscription à un compte\r\nfunction AccesCompte() {\r\n  //Variable pour le choix de l'affichage du formulaire\r\n  const [formulaire, setFormulaire] = useState(\"\");\r\n  //Variable pour connaître à quelle endroit nous sommes, pour aller chercher des informations dans l'url\r\n  let location = useLocation(); /*variable de la page où je me trouve */\r\n  console.log(\"accesCompte= \" + location.pathname);\r\n  useEffect(() => {\r\n    if (location.pathname === \"/accescompte/connexion\") {\r\n      setFormulaire(\"connexion\");\r\n    } else if (location.pathname === \"/accescompte/inscription\") {\r\n      setFormulaire(\"inscription\");\r\n    }\r\n  }, [setFormulaire, location.pathname]);\r\n\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      {/* Banniere */}\r\n      <Row className=\"mb-5\">\r\n        <Col lg={12} className=\"p-0 banniereAPropos\">\r\n          <Container\r\n            fluid\r\n            className=\"h-100 d-flex flex-column justify-content-between bannierePropos\"\r\n          >\r\n            {formulaire === \"connexion\" ? (\r\n              <EnTete\r\n                titre=\"Accéder à votre compte\"\r\n                formulaire={formulaire}\r\n              ></EnTete>\r\n            ) : (\r\n              <EnTete titre=\"Inscription\" formulaire={formulaire}></EnTete>\r\n            )}\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n      {/*Formulaire*/}\r\n      <Row className=\"mx-auto\">\r\n        <Col xs={{ span: 6, offset: 2 }}>\r\n          {formulaire === \"connexion\" ? (\r\n            <FormulaireConnexion />\r\n          ) : (\r\n            <FormulaireInscription />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      {/* Image et texte */}\r\n      <Row className=\"bg-dark mx-auto text-light\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <ImageTexte></ImageTexte>\r\n        </Col>\r\n      </Row>\r\n      {/* bannière publicitaire */}\r\n      <Row className=\"m-5 bkg-dark bannierePub\">\r\n        <Col xs={12} className=\"m-5\">\r\n          {/**background d'une image de publicité, voir si ajouter le lien pour postuler */}\r\n        </Col>\r\n      </Row>\r\n      {/* Liens des demandes par titre d'emploi \r\n      <Row>\r\n        <Col lg={12} className=\"p-0\">\r\n          <LiensEmploiListe></LiensEmploiListe>\r\n        </Col>\r\n      </Row>*/}\r\n      {/* Pied de page*/}\r\n      <Row className=\"my-auto mx-auto\">\r\n        <Col xs={12} className=\"p-0\">\r\n          <PiedDePage></PiedDePage>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AccesCompte;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { IoMdAdd } from \"react-icons/io\";\r\n\r\n// Hook pour le bouton pour ajouter une demande de stage dans l'administration\r\nfunction BoutonAjoutDemande() {\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n  return (\r\n    <Link\r\n      to={\r\n        \"ajout/\" + ls.get(\"nom\").toString() + \"?id=\" + ls.get(\"id\").toString()\r\n      }\r\n      className=\"btn btn-light ajoutDemande p-2\"\r\n    >\r\n      <IoMdAdd /> Ajouter une demande de stage\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default BoutonAjoutDemande;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\n\r\n// Hook pour le bouton pour ajouter une offre de stage dans l'administration\r\nfunction BoutonAjoutOffre() {\r\n  return (\r\n    <Button className=\"btn btn-light ajoutDemande p-2\">\r\n      <IoMdAdd /> Ajouter une offre de stage\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default BoutonAjoutOffre;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button, Table } from \"react-bootstrap\";\r\n\r\nimport { BsArrow90DegRight } from \"react-icons/bs\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { FaUserGraduate } from \"react-icons/fa\";\r\n\r\n// Hook pour la fiche détaillée du candidat avec le lien profil ou pour les entreprises\r\n//Pour le lien profil dans admin, props = user\r\nfunction DetailsUtilisateur(props) {\r\n  //variable pour l'étudiant connecté\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  //Fonction éxécuté à chaque appel du composant\r\n  useEffect(() => {\r\n    //appelle la fonction pour les données de l'API\r\n    getUtilisateurs();\r\n  }, []);\r\n  //Données de la base de donnée de l'étudiant connecté\r\n  async function getUtilisateurs() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_UTILISATEURS +\r\n          \"/\" +\r\n          props.user\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreurdsas\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <Container fluid className=\"h-100 adminDetails\">\r\n      <Row className=\"mb-5\">\r\n        {/*Titre */}\r\n        <Col lg={6}>\r\n          <h1>\r\n            Fiche du candidat: {donneesRecues.prenom} {donneesRecues.nom}\r\n          </h1>\r\n        </Col>\r\n        <Col lg={6}>\r\n          <h1>\r\n            <BsArrow90DegRight style={{ transform: \"rotate(90deg)\" }} />\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/*<Col lg={12}>\r\n          <Button>Retour à la liste</Button>\r\n  </Col>*/}\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12} className=\"text-right\">\r\n          <Button variant=\"light\" className=\"m-2\">\r\n            <BsPencilSquare className=\"vert mx-1\" />\r\n            Modifier\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"bordureBleu p-3\">\r\n        <Col lg={12}>\r\n          <h3>\r\n            <FaUserGraduate className=\"mr-2\" />\r\n            {/*<FaUserTie />*/}\r\n            {donneesRecues.prenom} {donneesRecues.nom}\r\n          </h3>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12} className=\"py-3\">\r\n          <Table striped bordered hover>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <h5>Nom et prénom du stagiaire</h5>\r\n                </td>\r\n                <td>\r\n                  {donneesRecues.prenom} {donneesRecues.nom}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <h5>Adresse</h5>\r\n                </td>\r\n                <td>{donneesRecues.adresse}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <h5>Courriel</h5>\r\n                </td>\r\n                <td>{donneesRecues.courriel}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <h5>Téléphone</h5>\r\n                </td>\r\n                <td>{donneesRecues.telephone}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <h5>Ville</h5>\r\n                </td>\r\n                <td>{donneesRecues.ville}</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n      {/*<Row>\r\n        <Col lg={12}>\r\n          <Form>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Example textarea</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={8} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12} className=\"text-right\">\r\n          <Button>Envoyer</Button>\r\n        </Col>\r\n      </Row>*/}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DetailsUtilisateur;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\n// Hook pour le bouton de connexion\r\nfunction BoutonRemoveDemande(props) {\r\n  //Fonction pour supprimer la demande de stage\r\n  async function removeDemande() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_DEMANDES +\r\n          \"/\" +\r\n          props.demandeID,\r\n        {\r\n          method: \"delete\",\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n        console.log(\"SUPPRESSION!\");\r\n        return response;\r\n      }\r\n\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <Button size=\"md\" onClick={removeDemande} variant=\"light\" className=\"px-1\">\r\n      <TiDelete className=\"rouge\" />\r\n      Supprimer\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default BoutonRemoveDemande;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nimport { FaUserGraduate } from \"react-icons/fa\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nimport BoutonRemoveDemande from \"../boutons/BoutonRemoveDemande\";\r\n\r\n// Hook pour chacune des demandes de stage\r\nfunction DemandeStageCarte(props) {\r\n  var ls = require(\"local-storage\");\r\n  //Variable pour connaître la page où je me trouve, pour aller chercher des informations dans l'url\r\n  let location = useLocation();\r\n  //L'utilisation du useState, fera de nouveau le rendu à chaque fois qu'elle est modifiée\r\n  const [objetEtudiant, setObjetEtudiant] = useState({});\r\n  useEffect(() => {\r\n    //appelle la fonction getEtudiant pour l'appel à l'API, obtenir les informations de l'utilisateur\r\n    getEtudiant();\r\n  }, []);\r\n  //Fonction pour l'appel à l'API\r\n  async function getEtudiant() {\r\n    //Variables pour les données de l'étudiant qui fait la demande\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_UTILISATEURS +\r\n          \"/\" +\r\n          props.etudiant\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setObjetEtudiant(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"validationDemande my-3\">\r\n      <Row className=\"my-2 bordureBleu p-2\">\r\n        <Col xs={12} md={6} className=\"souligne\">\r\n          <h3>\r\n            <FaUserGraduate className=\"mx-2\" />\r\n            <strong>{props.titre}</strong>\r\n          </h3>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <p className=\"text-right d-inline mb-1\">\r\n            Publié le: {props.dateParution}\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"my-2\">\r\n        <Col xs={12} md={6}>\r\n          {objetEtudiant.prenom} {objetEtudiant.nom}\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <strong>Formation: </strong>\r\n          <p className=\"d-inline\">{props.formation}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"my-2\">\r\n        <Col xs={12} md={6}>\r\n          <strong>Ville: </strong>\r\n          <p className=\"d-inline\">{props.ville}</p>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <strong>Début: </strong>\r\n          <p className=\"d-inline\">{props.dateDebut}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"my-2\">\r\n        <Col xs={12} md={6}>\r\n          <strong>Établissement scolaire: </strong>\r\n          <p className=\"d-inline\">{objetEtudiant.nomEcole}</p>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <strong>Fin: </strong>\r\n          <p className=\"d-inline\">{props.dateFin}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"my-2\">\r\n        <Col xs={12}>\r\n          <p>{props.description}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12} className=\"p-0\">\r\n          <div className=\"w-100 d-flex flex-row justify-content-between\">\r\n            <div>{/*Bouton */}</div>\r\n            <div className=\"text-right d-inline mr-1\">\r\n              <Link\r\n                to={\"edition/\" + ls.get(\"nom\").toString() + \"?id=\" + props.id}\r\n                className=\"btn btn-light\"\r\n              >\r\n                <BsPencilSquare className=\"mx-1 vert\" />\r\n                Modifier\r\n              </Link>\r\n              <BoutonRemoveDemande demandeID={props.id}></BoutonRemoveDemande>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DemandeStageCarte;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fr\";\r\n\r\nimport { BsArrow90DegRight } from \"react-icons/bs\";\r\nimport DemandeStageCarte from \"./DemandeStageCarte\";\r\n\r\n// Hook pour la section de la gestion des demandes de stage\r\nfunction DemandesStage(props) {\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n  //Constante pour les données reçues par l'API\r\n  //L'utilisation du useState, fera de nouveau le rendu à chaque fois qu'elle est modifiée\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage\r\n    getDemandesStage();\r\n  }, []);\r\n  //Fonction pour l'appel à l'API\r\n  async function getDemandesStage() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_DEMANDES\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n  function formatDate(d) {\r\n    var dateMoment = Moment(d).add(1, \"days\");\r\n    dateMoment.locale(\"fr\");\r\n    return dateMoment.format(\"Do MMMM YYYY\");\r\n  }\r\n  return (\r\n    <Container fluid className=\"h-100 mr-2\">\r\n      <Row className=\"mb-5\">\r\n        {/*Titre */}\r\n        <Col xs={12}>\r\n          <h2 className=\"d-inline\">Demandes de stage</h2>\r\n          <BsArrow90DegRight style={{ transform: \"rotate(90deg)\" }} />\r\n        </Col>\r\n      </Row>\r\n      {/*affichage dynamique */}\r\n      {/*Affiche seulement les demandes de l'étudiant*/}\r\n      <Row>\r\n        {donneesRecues.map((item) =>\r\n          item.etudiant === ls.get(\"id\") ? (\r\n            <Col xs={12} key={\"demandeAdmin\" + item._id}>\r\n              <DemandeStageCarte\r\n                id={item._id}\r\n                titre={item.titre}\r\n                ville={item.ville}\r\n                formation={item.programmeSuivi}\r\n                dateDebut={formatDate(item.dateDebut)}\r\n                dateFin={formatDate(item.dateFin)}\r\n                description={item.description}\r\n                dateParution={formatDate(item.dateParution)}\r\n                etudiant={item.etudiant}\r\n              ></DemandeStageCarte>\r\n            </Col>\r\n          ) : null\r\n        )}\r\n        {/*Affiche toutes les demandes pour un administrateur connecté*/}\r\n        {donneesRecues.map((item) =>\r\n          props.acces === \"999\" ? (\r\n            <Col xs={12} key={\"keyCardDemandeAdmin\" + item._id}>\r\n              <DemandeStageCarte\r\n                id={item._id}\r\n                titre={item.titre}\r\n                ville={item.ville}\r\n                formation={item.programmeSuivi}\r\n                dateDebut={formatDate(item.dateDebut)}\r\n                dateFin={formatDate(item.dateFin)}\r\n                description={item.description}\r\n                dateParution={formatDate(item.dateParution)}\r\n                etudiant={item.etudiant}\r\n              ></DemandeStageCarte>\r\n            </Col>\r\n          ) : null\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DemandesStage;\r\n","import React from \"react\";\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { FaUserGraduate, FaUserTie } from \"react-icons/fa\";\r\n\r\n// Hook pour les cards des offres de stage, en attente de validation\r\nfunction ValidationCarteOffre() {\r\n  return (\r\n    <Container fluid className=\"validationOffre my-3\">\r\n      <Row className=\"p-3 bordureVert\">\r\n        <Col lg={12}>\r\n          {\" \"}\r\n          <FaUserGraduate />\r\n          <FaUserTie />\r\n          Profession\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12}>Nom complet</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12}>Ville</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12}>Entreprise</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12}>texte</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12} className=\"text-right d-inline\">\r\n          <Button className=\"refuser m-2\">Refuser</Button>\r\n          <Button className=\"accepter m-2\">Accepter</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ValidationCarteOffre;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { FaUserGraduate } from \"react-icons/fa\";\r\n\r\n// Hook pour les cards des demandes de stage, en attente de validation\r\nfunction ValidationCarteDemande(props) {\r\n  //L'utilisation du useState, fera de nouveau le rendu à chaque fois qu'elle est modifiée\r\n  const [objetEtudiant, setObjetEtudiant] = useState({});\r\n\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage pour l'appel à l'API\r\n    getEtudiant();\r\n  }, []);\r\n  //Fonction pour l'appel à l'API\r\n  async function getEtudiant() {\r\n    //Variables pour les données de l'étudiant qui fait la demande\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_UTILISATEURS +\r\n          \"/\" +\r\n          props.etudiant\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setObjetEtudiant(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Fonction pour accepter la validation, changer le paramètre valide et actif à true\r\n  async function accepterValidation() {\r\n    console.log(\"je valide\");\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_DEMANDES +\r\n          \"/\" +\r\n          props.id,\r\n\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"PUT\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n          body: JSON.stringify({\r\n            titre: props.titre,\r\n            secteurActivite: props.secteurActivite,\r\n            ville: props.ville,\r\n            dateDebut: props.dateDebut,\r\n            dateFin: props.dateFin,\r\n            duree: props.duree,\r\n            description: props.description,\r\n            nbHeuresSemaine: props.nbHeuresSemaine,\r\n            autresInformations: props.autresInformations,\r\n            programmeSuivi: props.programmeSuivi,\r\n            autresFormations: props.autresFormations,\r\n            competences: props.competences,\r\n            typestage: props.typestage,\r\n            remunere: props.remunere,\r\n            dateParution: new Date(),\r\n            etudiant: props.etudiant,\r\n            actif: true,\r\n            valide: true,\r\n            supprime: false,\r\n            vedette: props.vedette,\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n        toast.dark(\r\n          \"Demande de \" +\r\n            objetEtudiant.prenom +\r\n            \" \" +\r\n            objetEtudiant.nom +\r\n            \" validée!\"\r\n        );\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 5000); //Retour à la page d'accueil de la validation\r\n\r\n        console.log(\"reponse\" + response);\r\n        console.log(\r\n          \"urlvalidation\" +\r\n            process.env.REACT_APP_API +\r\n            process.env.REACT_APP_DEMANDES +\r\n            \"/\" +\r\n            props.id\r\n        );\r\n        return response;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  //Fonction pour refuser la validation, changer le paramètre valide et actif à false et supprime à true\r\n  async function refuserValidation() {\r\n    console.log(\"je refuse\");\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_DEMANDES +\r\n          \"/\" +\r\n          props.id,\r\n\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"PUT\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n          body: JSON.stringify({\r\n            titre: props.titre,\r\n            secteurActivite: props.secteurActivite,\r\n            ville: props.ville,\r\n            dateDebut: props.dateDebut,\r\n            dateFin: props.dateFin,\r\n            duree: props.duree,\r\n            description: props.description,\r\n            nbHeuresSemaine: props.nbHeuresSemaine,\r\n            autresInformations: props.autresInformations,\r\n            programmeSuivi: props.programmeSuivi,\r\n            autresFormations: props.autresFormations,\r\n            competences: props.competences,\r\n            typestage: props.typestage,\r\n            remunere: props.remunere,\r\n            dateParution: new Date(),\r\n            etudiant: props.etudiant,\r\n            actif: false,\r\n            valide: false,\r\n            supprime: false,\r\n            vedette: props.vedette,\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n        toast.dark(\r\n          \"Demande de \" +\r\n            objetEtudiant.prenom +\r\n            \" \" +\r\n            objetEtudiant.nom +\r\n            \" refusée!\"\r\n        );\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 5000); //Retour à la page d'accueil de la validation\r\n\r\n        console.log(\"reponse\" + response);\r\n        console.log(\r\n          \"urlvalidation\" +\r\n            process.env.REACT_APP_API +\r\n            process.env.REACT_APP_DEMANDES +\r\n            \"/\" +\r\n            props.id\r\n        );\r\n        return response;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"validationDemande my-3\">\r\n        <Row className=\"p-3 bordureBleu\">\r\n          <Col lg={12}>\r\n            <h3 className=\"m-0\">\r\n              <FaUserGraduate />\r\n              <strong className=\"m-0\">{props.titre}</strong>\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"my-2\">\r\n          <Col lg={12}>\r\n            <h5 className=\"nom d-inline\">{objetEtudiant.prenom} </h5>\r\n            <h5 className=\"nom d-inline\">{objetEtudiant.nom}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"my-2\">\r\n          <Col lg={12}>\r\n            <strong>Ville: </strong>\r\n            <p className=\"d-inline\">{props.ville}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"my-2\">\r\n          <Col lg={12}>\r\n            <strong>Établissement scolaire: </strong>\r\n            <p className=\"d-inline\">{objetEtudiant.nomEcole}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"my-2\">\r\n          <Col lg={12}>\r\n            <p>{props.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={12} className=\"text-right d-inline\">\r\n            <div>\r\n              <Button className=\"m-2 refuser\" onClick={refuserValidation}>\r\n                Refuser\r\n              </Button>\r\n              <Button className=\"m-2 accepter\" onClick={accepterValidation}>\r\n                Accepter\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ValidationCarteDemande;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n//import { useLocation } from \"react-router-dom\";\r\n\r\nimport { BsArrow90DegRight } from \"react-icons/bs\";\r\nimport ValidationCarteOffre from \"./ValidationCarteOffre\";\r\nimport ValidationCarteDemande from \"./ValidationCarteDemande\";\r\n\r\n// Hook pour la section de la validation des demandes et offres de la page d'administration\r\nfunction Validation() {\r\n  //Variable pour les données des demandes\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n  useEffect(() => {\r\n    //appelle la fonction getDemandesStage pour l'appel à l'API\r\n    getDemandesStage();\r\n  }, []);\r\n  //Fonction pour l'appel à l'API\r\n  async function getDemandesStage() {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_DEMANDES\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      <Row className=\"mb-5\">\r\n        {/*Titre */}\r\n        <Col xs={12}>\r\n          <h1 className=\"titre\">En attente de validation</h1>\r\n        </Col>\r\n        <Col xs={{ span: 12, order: 1 }} lg={{ span: 6, order: 1 }}>\r\n          <h3 className=\"d-inline\">\r\n            Demandes de stage\r\n            <BsArrow90DegRight style={{ transform: \"rotate(90deg)\" }} />\r\n          </h3>\r\n        </Col>\r\n        <Col xs={{ span: 12, order: 3 }} lg={{ span: 6, order: 2 }}>\r\n          <h3 className=\"d-inline\">\r\n            Offres de stage\r\n            <BsArrow90DegRight style={{ transform: \"rotate(90deg)\" }} />\r\n          </h3>\r\n        </Col>\r\n\r\n        {/*affichage dynamique, si la demande a un paramètre valide= false et qu'il est toujours actif et pas supprimé */}\r\n        {/*La demande ou l’offre de stage publiée par un utilisateur sera inactivée et non affichée sur le portail public. Elle sera en attente de validation.  */}\r\n\r\n        <Col xs={{ span: 12, order: 2 }} lg={{ span: 6, order: 3 }}>\r\n          {donneesRecues\r\n            .filter(\r\n              (donnee) => !donnee.valide && !donnee.supprime && !donnee.actif\r\n            )\r\n            .map((item) => (\r\n              <ValidationCarteDemande\r\n                key={\"validationDemande\" + item._id}\r\n                id={item._id}\r\n                titre={item.titre}\r\n                secteurActivite={item.secteurActivite}\r\n                ville={item.ville}\r\n                dateDebut={item.dateDebut}\r\n                dateFin={item.dateFin}\r\n                duree={item.duree}\r\n                description={item.description}\r\n                nbHeuresSemaine={item.nbHeuresSemaine}\r\n                autresInformations={item.autresInformations}\r\n                programmeSuivi={item.programmeSuivi}\r\n                autresFormations={item.autresFormations}\r\n                competences={item.competences}\r\n                typestage={item.typestage}\r\n                remunere={item.remunere}\r\n                etudiant={item.etudiant}\r\n                vedette={item.vedette}\r\n              ></ValidationCarteDemande>\r\n            ))}\r\n        </Col>\r\n        {/*Pour les offres à valider */}\r\n        <Col xs={{ span: 12, order: 4 }} lg={{ span: 6, order: 4 }}>\r\n          <ValidationCarteOffre></ValidationCarteOffre>\r\n          <ValidationCarteOffre></ValidationCarteOffre>\r\n          <ValidationCarteOffre></ValidationCarteOffre>\r\n          <ValidationCarteOffre></ValidationCarteOffre>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Validation;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\n// Hook pour les cards de chacun des candidats, modification ou suppression\r\nfunction CandidatCarte() {\r\n  return (\r\n    <Card\r\n      className=\"w-100 text-justify mb-4 text-center\"\r\n      style={{ width: \"18rem\" }}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h2 className=\"nom\">Nom complet</h2>\r\n        </Card.Title>\r\n        <Card.Subtitle className=\"mb-2\">\r\n          <h6>Établissement scolaire</h6>\r\n        </Card.Subtitle>\r\n        <Card.Subtitle className=\"mb-2\">\r\n          <h6>Ville</h6>\r\n        </Card.Subtitle>\r\n        <Button variant=\"light\" className=\"mx-1\">\r\n          <BsPencilSquare className=\"mx-1 vert\" />\r\n          Modifier\r\n        </Button>\r\n        <Button variant=\"light\" className=\"mx-1\">\r\n          <TiDelete className=\"mx-1 rouge\" />\r\n          Supprimer\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CandidatCarte;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { BsArrow90DegRight } from \"react-icons/bs\";\r\nimport CandidatCarte from \"./CandidatCarte\";\r\n\r\n// Hook pour la section de la gestion des candidats\r\nfunction Validation() {\r\n  return (\r\n    <Container fluid className=\"h-100 mr-5\">\r\n      <Row className=\"mb-5\">\r\n        {/*Titre */}\r\n        <Col lg={12}>\r\n          <h2 className=\"d-inline\">Liste des candidats</h2>\r\n          <BsArrow90DegRight style={{ transform: \"rotate(90deg)\" }} />\r\n        </Col>\r\n      </Row>\r\n      {/*affichage dynamique */}\r\n      <Row>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n        <Col lg={3}>\r\n          <CandidatCarte></CandidatCarte>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Validation;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { Nav, Dropdown } from \"react-bootstrap\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { logout } from \"../utils/index\";\r\n\r\nimport BoutonAjoutDemande from \"../components/boutons/BoutonAjoutDemande\";\r\nimport BoutonAjoutOffre from \"../components/boutons/BoutonAjoutOffre\";\r\n\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { BsBoxArrowRight } from \"react-icons/bs\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport {\r\n  FaArrowCircleRight,\r\n  FaArrowCircleLeft,\r\n  FaUserGraduate,\r\n  FaUserTie,\r\n} from \"react-icons/fa\";\r\n\r\nimport logo from \"../img/logo.svg\";\r\n\r\nimport DetailsUtilisateur from \"../components/admin/DetailsUtilisateur\";\r\nimport DemandesStage from \"../components/admin/DemandesStage\";\r\nimport Validation from \"../components/admin/Validation\";\r\nimport CandidatsListe from \"../components/admin/CandidatsListe\";\r\nimport DemandeDetails from \"../components/public/DemandeDetails\";\r\n\r\n// Hook pour la page d'administration\r\nfunction Admin(props) {\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n\r\n  //Variable pour récupérer le code du niveau d'accès\r\n  const searchString = props.location.search.substring(\r\n    8,\r\n    props.location.search.length\r\n  );\r\n\r\n  //Variable pour afficher les différentes sections de l'administrateur avec le menu de gauche\r\n\r\n  const [adminSection, setAdminSection] = useState([]);\r\n  //variable pour afficher le profil ou les demandes de stage d'un étudiant(menu dropdown, en haut)\r\n  const [etudiantSection, setEtudiantSection] = useState([]);\r\n  //Fonction pour afficher le statut\r\n  function renderSwitchStatut() {\r\n    switch (searchString) {\r\n      case \"999\":\r\n        return \"administrateur\";\r\n      case \"333\":\r\n        return \"entreprise\";\r\n      case \"111\":\r\n        return \"étudiant\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  //Fonction pour afficher le contenu principal\r\n  function renderSwitchMain() {\r\n    switch (searchString) {\r\n      case \"999\":\r\n        return renderSwitchAdmin();\r\n      case \"111\":\r\n        //Changer pour afficher la liste de l'étudiant connecté ajouter un lien pour son profil\r\n        return renderSwitchEtudiant();\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n  //fonction pour afficher soit le profil de l'étudiant soit ses demandes de stage\r\n  function renderSwitchEtudiant() {\r\n    switch (etudiantSection) {\r\n      case \"demandes\":\r\n        return <DemandesStage user={ls.get(\"id\")} acces={searchString} />;\r\n      case \"profil\":\r\n        return <DetailsUtilisateur user={ls.get(\"id\")} acces={searchString} />;\r\n      default:\r\n        return <DemandesStage user={ls.get(\"id\")} acces={searchString} />;\r\n    }\r\n  }\r\n  //Fonction pour afficher le contenu principal\r\n  function renderSwitchAdmin() {\r\n    switch (adminSection) {\r\n      case \"validation\":\r\n        return <Validation />;\r\n      case \"demandes\":\r\n        return <DemandesStage acces={searchString} />;\r\n      case \"candidats\":\r\n        return <CandidatsListe />;\r\n      case \"details\":\r\n        return <DemandeDetails />;\r\n      //case \"entreprise\":\r\n      //  return <OffresStage acces={searchString}/>;\r\n      case \"profil\":\r\n        return <DetailsUtilisateur user={ls.get(\"id\")} acces={searchString} />;\r\n      //Ajouter pour les offres des entreprises\r\n      default:\r\n        return <Validation />;\r\n    }\r\n  }\r\n  //Fonction pour afficher le contenu principal\r\n  function renderSwitchBouton() {\r\n    switch (searchString) {\r\n      case \"111\":\r\n        return (\r\n          <Col xs={12} md={6} lg={3}>\r\n            <BoutonAjoutDemande></BoutonAjoutDemande>\r\n          </Col>\r\n        );\r\n      case \"333\":\r\n        return (\r\n          <Col xs={12} md={6} lg={3}>\r\n            <BoutonAjoutOffre></BoutonAjoutOffre>\r\n          </Col>\r\n        );\r\n      case \"999\":\r\n        return (\r\n          <>\r\n            <Col xs={12} md={6} lg={3}>\r\n              <BoutonAjoutDemande></BoutonAjoutDemande>\r\n            </Col>\r\n            <Col xs={12} md={6} lg={3}>\r\n              <BoutonAjoutOffre></BoutonAjoutOffre>\r\n            </Col>\r\n          </>\r\n        );\r\n      default:\r\n        return (\r\n          <>\r\n            <Col xs={12} md={6} lg={3}></Col>\r\n            <Col xs={12} md={6} lg={3}></Col>\r\n          </>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"h-100\">\r\n      <Row>\r\n        {/*Menu de navigation */}\r\n        <Col xs={4} md={2} className=\"fondBleu p-0\">\r\n          <Nav variant=\"tabs\" className=\"flex-column\">\r\n            <Link to=\"/\">\r\n              <img src={logo} alt=\"logo\" className=\"w-100 mb-5 logo\" />\r\n            </Link>\r\n            {/*Le menu du dashboard s'affiche seulement pour l'administrateur */}\r\n            {searchString === \"999\" ? (\r\n              <div>\r\n                <Nav.Link\r\n                  className=\"text-light\"\r\n                  onClick={() => setAdminSection(\"validation\")}\r\n                >\r\n                  <AiFillHome /> Accueil\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  disabled\r\n                  className=\"text-light\"\r\n                  onClick={() => setAdminSection(\"offres\")}\r\n                >\r\n                  <FaArrowCircleRight /> Offres de stage\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  className=\"text-light\"\r\n                  onClick={() => setAdminSection(\"demandes\")}\r\n                >\r\n                  <FaArrowCircleLeft /> Demandes de stage\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  className=\"text-light \"\r\n                  onClick={() => setAdminSection(\"candidats\")}\r\n                >\r\n                  <FaUserGraduate /> Candidats\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  disabled\r\n                  className=\"text-light mb-5\"\r\n                  onClick={() => setAdminSection(\"entreprises\")}\r\n                >\r\n                  <FaUserTie /> Entreprises\r\n                </Nav.Link>\r\n                <Link\r\n                  to=\"/\"\r\n                  className=\"text-light\"\r\n                  onClick={function () {\r\n                    logout();\r\n                    ls.clear();\r\n                  }}\r\n                >\r\n                  Déconnexion\r\n                </Link>\r\n              </div>\r\n            ) : (\r\n              <Link\r\n                to=\"/\"\r\n                className=\"text-light\"\r\n                onClick={function () {\r\n                  logout();\r\n                  ls.clear();\r\n                }}\r\n              >\r\n                Déconnexion\r\n              </Link>\r\n            )}\r\n          </Nav>\r\n        </Col>\r\n        {/*affichage de la page */}\r\n        <Col xs={8} md={10}>\r\n          <Container fluid>\r\n            {/*en-tête de la page */}\r\n            <Row className=\"py-3\">\r\n              {renderSwitchBouton()}\r\n\r\n              <Col sm={12} md={9} lg={5} className=\"d-flex flex-row text-right\">\r\n                <div>\r\n                  <h4>{ls.get(\"prenom\") + \" \" + ls.get(\"nom\")}</h4>\r\n\r\n                  <h5 className=\"statut\">{renderSwitchStatut()}</h5>\r\n                </div>\r\n                <div className=\"mx-2\">\r\n                  <Image\r\n                    src=\"https://www.mariderm.com/wp-content/uploads/2018/12/visage-tonus-after.jpg\"\r\n                    roundedCircle\r\n                    style={{ height: \"10vh\" }}\r\n                  />\r\n                </div>\r\n                {/*DropDown, liste des demandes et profil */}\r\n\r\n                {searchString === \"111\" || searchString === \"333\" ? (\r\n                  <div className=\"my-auto mx-1\">\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle id=\"dropdown-basic\" variant=\"light\">\r\n                        <IoIosArrowDown />\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item\r\n                          onClick={() => setEtudiantSection(\"profil\")}\r\n                        >\r\n                          Mon profil\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item\r\n                          onClick={() => setEtudiantSection(\"demandes\")}\r\n                        >\r\n                          Mes demandes de stage\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"my-auto mx-1\">\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle id=\"dropdown-basic\" variant=\"light\">\r\n                        <IoIosArrowDown />\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item\r\n                          onClick={() => setAdminSection(\"profil\")}\r\n                        >\r\n                          Mon profil\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </div>\r\n                )}\r\n              </Col>\r\n              {/*Déconnexion */}\r\n              <Col sm={12} md={1} className=\"text-right\">\r\n                <Link\r\n                  to=\"/\"\r\n                  onClick={function () {\r\n                    logout();\r\n                    ls.clear();\r\n                  }}\r\n                >\r\n                  <h1 className=\"text-dark\">\r\n                    <BsBoxArrowRight />\r\n                  </h1>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n            {/*affichage dynamique */}\r\n\r\n            <Row>{renderSwitchMain()}</Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport Moment from \"moment\";\r\n\r\nimport logoNoir from \"../../img/logoNoir.svg\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport fr from \"date-fns/locale/fr-CA\";\r\nregisterLocale(\"fr\", fr);\r\n/*Fonction pour l'édition d'une demande de stage*/\r\nfunction FormEditDemande(props) {\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n  //Variable pour connaître la page où je me trouve, pour aller chercher des informations dans l'url\r\n  let location = useLocation();\r\n  //Variable pour récupérer l'id dans l'url, avec la propriété search\r\n  var stringId = location.search.replace(\"?id=\", \"\");\r\n  //Variables pour les informations du formulaire\r\n  let [secteurs, setSecteurs] = useState([]);\r\n  let [secteurChoisi, setSecteurChoisi] = useState(\"\");\r\n  let [dateDebutEdit, setDateDebutEdit] = useState(new Date());\r\n  let [dateFinEdit, setDateFinEdit] = useState(new Date());\r\n  let [change, setChange] = useState(false);\r\n\r\n  let [autresFormationsEdit, setAutresFormationsEdit] = useState([]);\r\n  let [competences, setCompetences] = useState([]);\r\n  //Variable des informations de la demande sélectionnée\r\n  const [objetDemande, setObjetDemande] = useState({\r\n    titre: \"\",\r\n    secteurActivite: \"\",\r\n    ville: \"\",\r\n    dateDebut: new Date(),\r\n    dateFin: new Date(),\r\n    duree: null,\r\n    description: \"\",\r\n    nbHeuresSemaine: null,\r\n    autresInformations: \"\",\r\n    programmeSuivi: \"\",\r\n    autresFormations: [],\r\n    competences: [],\r\n    typestage: \"\",\r\n    remunere: \"\",\r\n    dateParution: new Date(),\r\n    etudiant: \"\",\r\n    actif: null,\r\n    valide: null,\r\n    supprime: null,\r\n    vedette: null,\r\n  });\r\n  //useEffect, Obtenir les demandes de stage et la liste des secteurs d'activité\r\n  useEffect(() => {\r\n    getDemande();\r\n  }, []);\r\n  useEffect(() => {\r\n    getSecteurs();\r\n  }, []);\r\n  useEffect(() => {\r\n    setAutresFormationsEdit(objetDemande.autresFormations);\r\n    setCompetences(objetDemande.competences);\r\n    setChange(false);\r\n  }, [objetDemande]);\r\n\r\n  //On récupère les infos de la bd de la demande sélectionnée\r\n  async function getDemande() {\r\n    //Variable pour les données de la demande sélectionnée\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_DEMANDES +\r\n          \"/\" +\r\n          stringId\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setObjetDemande(reponseDeApi);\r\n\r\n      setDateDebutEdit(Moment(reponseDeApi.dateDebut).add(1, \"days\"));\r\n      setDateFinEdit(Moment(reponseDeApi.dateFin).add(1, \"days\"));\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //On récupère les infos de la bd de la liste des secteurs d'activité\r\n  async function getSecteurs() {\r\n    //Variables pour les données de l'étudiant qui fait la demande\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_SECTEURS\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setSecteurs(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Méthode pour modifier la bd avec le formulaire, semblable à l'ajout ajouter l'id à l'URL et changer la methode pour PUT\r\n  async function editDemande(\r\n    titre,\r\n    ville,\r\n    duree,\r\n    description,\r\n    nbHeuresSemaine,\r\n    autresInfos,\r\n    programmeSuivi,\r\n    type,\r\n    remuneration\r\n  ) {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API +\r\n          process.env.REACT_APP_DEMANDES +\r\n          \"/\" +\r\n          stringId,\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"PUT\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n          body: JSON.stringify({\r\n            titre: titre,\r\n            secteurActivite: secteurChoisi,\r\n            ville: ville,\r\n            dateDebut: Moment(dateDebutEdit).add(-1, \"days\"),\r\n            dateFin: Moment(dateFinEdit).add(-1, \"days\"),\r\n            duree: duree,\r\n            description: description,\r\n            nbHeuresSemaine: nbHeuresSemaine,\r\n            autresInformations: autresInfos,\r\n            programmeSuivi: programmeSuivi,\r\n            autresFormations: autresFormationsEdit,\r\n            competences: competences,\r\n            typestage: type,\r\n            remunere: remuneration,\r\n            dateParution: objetDemande.dateParution,\r\n            etudiant: objetDemande.etudiant,\r\n            //Pas nécessaire de modifier les paramètres (actif, valide et supprime), cette étape se fait lors de la validation ou le bouton supprimer\r\n            actif: true,\r\n            valide: true,\r\n            supprime: false,\r\n            vedette: objetDemande.vedette,\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n        props.history.push(\r\n          \"/admin/\" + ls.get(\"nom\") + \"?niveau=\" + ls.get(\"niveau\")\r\n        ); //Retour à la page d'accueil\r\n\r\n        return response;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  /* Va chercher les infos des inputs du formulaire */\r\n  function handleEdit(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const titreEdit = document.getElementById(\"titreId\").value;\r\n    const villeEdit = document.getElementById(\"villeId\").value;\r\n    const dureeEdit = document.getElementById(\"dureeId\").value;\r\n    const descriptionEdit = document.getElementById(\"descriptionId\").value;\r\n    const heuresSemaineEdit = document.getElementById(\"heuresSemaineId\").value;\r\n    const autresInfosEdit = document.getElementById(\"autresInfosId\").value;\r\n    const programmeSuiviEdit = document.getElementById(\"programmeSuiviId\")\r\n      .value;\r\n    const typeStageEdit = document.getElementById(\"typeStageId\").value;\r\n    const remunerationEdit = document.getElementById(\"remunereId\").value;\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    /*Ajouter les compétences et autres Formations provenant d'une variable tableau */\r\n    editDemande(\r\n      titreEdit,\r\n      villeEdit,\r\n      dureeEdit,\r\n      descriptionEdit,\r\n      heuresSemaineEdit,\r\n      autresInfosEdit,\r\n      programmeSuiviEdit,\r\n      typeStageEdit,\r\n      remunerationEdit\r\n    );\r\n  }\r\n\r\n  //Fonction pour le changement du secteur d'activité\r\n  function handleChangeSecteur(e) {\r\n    setSecteurChoisi(e.target.value);\r\n  }\r\n\r\n  //Fonctions lors d'un changement dans les autres formations\r\n  //Si la valeur du checked est true ajouter la valeur au tableau, sinon effacer à partir de l'index\r\n  function handleChangeFormations(i) {\r\n    let tabFormations = autresFormationsEdit;\r\n    tabFormations.splice(i, 1);\r\n    setAutresFormationsEdit(tabFormations);\r\n    change ? setChange(false) : setChange(true);\r\n  }\r\n  //Fonctions lors d'un changement dans les autres formations\r\n  //Si la valeur du checked est true ajouter la valeur au tableau, sinon effacer à partir de l'index\r\n\r\n  function handleChangeCompetences(i) {\r\n    let tabCompetences = competences;\r\n    tabCompetences.splice(i, 1);\r\n    setCompetences(tabCompetences);\r\n    change ? setChange(false) : setChange(true);\r\n  }\r\n\r\n  //Fonction pour ajouter une formation supplémentaire\r\n  function handleClickAjoutFormation() {\r\n    let tabformations = autresFormationsEdit;\r\n    let formationAjoutee = document.getElementById(\"formationId\").value;\r\n    tabformations.push(formationAjoutee);\r\n    setAutresFormationsEdit(tabformations);\r\n    change ? setChange(false) : setChange(true);\r\n  }\r\n  //Fonction pour ajouter une compétence supplémentaire\r\n  function handleClickAjoutCompetence() {\r\n    let tabcompetences = competences;\r\n    let competenceAjoutee = document.getElementById(\"competenceId\").value;\r\n    tabcompetences.push(competenceAjoutee);\r\n    setCompetences(tabcompetences);\r\n    change ? setChange(false) : setChange(true);\r\n  }\r\n\r\n  return (\r\n    <Container fluid id=\"formEdit\">\r\n      <Row>\r\n        <Link to=\"/\">\r\n          <img src={logoNoir} alt=\"logo\" className=\"w-50 mb-5 logo\" />\r\n        </Link>\r\n      </Row>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <h1 className=\"my-5 text-center font-large\">\r\n              Modifier la demande {objetDemande._id}\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"fondGris\">\r\n          <Col xs={12}>\r\n            <Form className=\"py-5\">\r\n              <Form.Group controlId=\"titreId\">\r\n                <Form.Label>Titre de la demande</Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={objetDemande.titre} />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <select id=\"selectSecteur\" onChange={handleChangeSecteur}>\r\n                  {secteurs.map((item) => (\r\n                    <option\r\n                      selected={item._id === objetDemande.secteurActivite}\r\n                      key={\"key\" + item._id}\r\n                      value={item.nom}\r\n                    >\r\n                      {item.nom}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"villeId\">\r\n                <Form.Label>Ville</Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={objetDemande.ville} />\r\n              </Form.Group>\r\n\r\n              {/*****Il faudra ajouter la valeur par défaut des\r\n                datepickers*******/}\r\n\r\n              <label className=\"d-block\">Date du début du stage</label>\r\n\r\n              <DatePicker\r\n                utcOffset\r\n                locale=\"fr\"\r\n                dateFormat=\"MM/dd/yyyy\"\r\n                onChange={(evt) => setDateDebutEdit(Moment(evt))}\r\n                selected={Moment(dateDebutEdit).toDate()}\r\n              />\r\n              <label className=\"d-block\">Date de fin du stage</label>\r\n\r\n              <DatePicker\r\n                utcOffset\r\n                locale=\"fr\"\r\n                dateFormat=\"MM/dd/yyyy\"\r\n                onChange={(evt) => setDateFinEdit(Moment(evt))}\r\n                selected={Moment(dateFinEdit).toDate()}\r\n              />\r\n              <Form.Group>\r\n                <Form.Label className=\"mr-2\">\r\n                  Durée en nombre de semaines\r\n                </Form.Label>\r\n                <input\r\n                  id=\"dureeId\"\r\n                  type=\"number\"\r\n                  defaultValue={objetDemande.duree}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"descriptionId\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={8}\r\n                  defaultValue={objetDemande.description}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label className=\"mr-2\">\r\n                  Nombre d'heures/semaine\r\n                </Form.Label>\r\n                <input\r\n                  id=\"heuresSemaineId\"\r\n                  type=\"number\"\r\n                  defaultValue={objetDemande.nbHeuresSemaine}\r\n                />\r\n              </Form.Group>\r\n              {/*Changer pour un textarea */}\r\n              <Form.Group controlId=\"autresInfosId\">\r\n                <Form.Label>Informations supplémentaires</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={8}\r\n                  defaultValue={objetDemande.autresInformations}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"programmeSuiviId\">\r\n                <Form.Label>Programme suivi</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={objetDemande.programmeSuivi}\r\n                />\r\n              </Form.Group>\r\n              {/*Les autres formations et les compétences sont affichées avec des checkbox*/}\r\n              <h3>Formations supplémentaires</h3>\r\n              {autresFormationsEdit.map((item, i) => {\r\n                return (\r\n                  <div>\r\n                    <input\r\n                      id={item}\r\n                      type=\"checkbox\"\r\n                      value={item}\r\n                      checked\r\n                      onClick={() => handleChangeFormations(i)}\r\n                    />\r\n                    <label for={item} className=\"ml-2\">\r\n                      {item}\r\n                    </label>\r\n                  </div>\r\n                );\r\n              })}\r\n              <input type=\"text\" className=\"mr-2\" id=\"formationId\"></input>\r\n              <Button type=\"button\" onClick={handleClickAjoutFormation}>\r\n                <IoMdAdd onClick={() => handleClickAjoutFormation} />\r\n              </Button>\r\n\r\n              <h3>Compétences</h3>\r\n              <Form.Group controlId=\"checkboxCompetences\">\r\n                {competences.map((item, i) => {\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        id={item}\r\n                        type=\"checkbox\"\r\n                        value={item}\r\n                        checked\r\n                        onChange={() => handleChangeCompetences(i)}\r\n                      />\r\n                      <label for={item} className=\"ml-2\">\r\n                        {item}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <input type=\"text\" className=\"mr-2\" id=\"competenceId\"></input>\r\n                <Button type=\"button\" onClick={handleClickAjoutCompetence}>\r\n                  <IoMdAdd onClick={() => handleClickAjoutCompetence} />\r\n                </Button>\r\n              </Form.Group>\r\n              {/*Ajouter un label,  Voir pour changer pour des boutons radio*/}\r\n              <Form.Group>\r\n                <h6>Type de stage</h6>\r\n                <select id=\"typeStageId\">\r\n                  {/*pour garder la valeur dans le formulaire */}\r\n                  <option selected>{objetDemande.typestage}</option>\r\n                  <option value=\"Temps plein\">Temps plein</option>\r\n                  <option value=\"Temps partiel\">Temps partiel</option>\r\n                  <option value=\"Alternance travail étude\">\r\n                    Alternance travail étude\r\n                  </option>\r\n                </select>\r\n              </Form.Group>\r\n              {/*Ajouter un label,  Voir pour changer pour des boutons radio*/}\r\n              <Form.Group>\r\n                <h6>Rémunération</h6>\r\n                <select id=\"remunereId\">\r\n                  {/*pour garder la valeur dans le formulaire */}\r\n                  <option selected>{objetDemande.remunere}</option>\r\n                  <option value=\"OUI\">OUI</option>\r\n                  <option value=\"NON\">NON</option>\r\n                  <option value=\"À la discrétion de l'entreprise\">\r\n                    À la discrétion de l'entreprise\r\n                  </option>\r\n                </select>\r\n              </Form.Group>\r\n              {/*ID de l'étudiant */}\r\n              {/* Pour l'administrateur l'id est entré, pour l'étudiant la variable local ou le props */}\r\n              <Form.Group controlId=\"etudiantId\">\r\n                <Form.Label>ID de l'étudiant</Form.Label>\r\n                <Form.Control\r\n                  disabled\r\n                  type=\"text\"\r\n                  defaultValue={objetDemande.etudiant}\r\n                />\r\n              </Form.Group>\r\n              {/*Changer pour un checkbox */}\r\n              <Form.Group controlId=\"vedetteId\">\r\n                <Form.Label>Demande vedette</Form.Label>\r\n                <Form.Control\r\n                  disabled\r\n                  type=\"text\"\r\n                  defaultValue={objetDemande.vedette}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Button\r\n              id=\"enregistrer\"\r\n              className=\"my-5\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={handleEdit}\r\n            >\r\n              Enregistrer\r\n            </Button>\r\n            <Link\r\n              className=\"btn btn-primary\"\r\n              to={\r\n                \"/admin/\" +\r\n                ls.get(\"nom\") +\r\n                \"?niveau=\" +\r\n                ls.get(\"niveau\").toString()\r\n              }\r\n            >\r\n              Annuler\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormEditDemande;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nimport Moment from \"moment\";\r\n\r\nimport logoNoir from \"../../img/logoNoir.svg\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport fr from \"date-fns/locale/fr-CA\";\r\nregisterLocale(\"fr\", fr);\r\n/*Fonction pour l'édition d'une demande de stage*/\r\nfunction FormAjoutDemande(props) {\r\n  //Déclare une variable pour le local storage\r\n  var ls = require(\"local-storage\");\r\n  //Variable pour connaître la page où je me trouve, pour aller chercher des informations dans l'url\r\n  let location = useLocation();\r\n  //Variable pour récupérer l'id dans l'url, avec la propriété search\r\n  var stringId = location.search.replace(\"?id=\", \"\");\r\n  //useEffect, Obtenir les secteurs d'activité pour le menu déroulant\r\n  useEffect(() => {\r\n    getSecteurs();\r\n  }, []);\r\n  useEffect(() => {\r\n    setChange(false);\r\n  });\r\n  //Variables pour les informations du formulaire\r\n  let [secteurs, setSecteurs] = useState([]);\r\n  let [secteurChoisi, setSecteurChoisi] = useState(\"\");\r\n  let [dateDebutAdd, setDateDebutAdd] = useState(new Date());\r\n  let [dateFinAdd, setDateFinAdd] = useState(new Date());\r\n  let [change, setChange] = useState(false);\r\n\r\n  let [autresFormationsAdd, setAutresFormationsAdd] = useState([]);\r\n  let [competences, setCompetences] = useState([]);\r\n  let [typeStage, setTypeStage] = useState(\"\");\r\n\r\n  //On récupère les infos de la bd de la liste des secteurs d'activité\r\n  async function getSecteurs() {\r\n    //Variables pour les données de l'étudiant qui fait la demande\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_SECTEURS\r\n      );\r\n      const reponseDeApi = await response.json();\r\n      setSecteurs(reponseDeApi);\r\n      if (!response.ok) {\r\n        //Permet d'attraper l'erreur 500 et l'erreur 400\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      //On gère l'erreur\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //Méthode pour modifier la bd avec le formulaire, semblable à l'ajout ajouter l'id à l'URL et changer la methode pour PUT\r\n  async function AddDemande(\r\n    titre,\r\n    ville,\r\n    duree,\r\n    description,\r\n    nbHeuresSemaine,\r\n    autresInfos,\r\n    programmeSuivi,\r\n    type,\r\n    remuneration\r\n  ) {\r\n    try {\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + process.env.REACT_APP_DEMANDES,\r\n        {\r\n          /*Pour un ajout utiliser la méthode POST */\r\n          method: \"POST\",\r\n          /*Pour un ajout ajouter un headers */\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n\r\n          body: JSON.stringify({\r\n            titre: titre,\r\n            secteurActivite: secteurChoisi,\r\n            ville: ville,\r\n            dateDebut: dateDebutAdd,\r\n            dateFin: dateFinAdd,\r\n            duree: duree,\r\n            description: description,\r\n            nbHeuresSemaine: nbHeuresSemaine,\r\n            autresInformations: autresInfos,\r\n            programmeSuivi: programmeSuivi,\r\n            autresFormations: autresFormationsAdd,\r\n            competences: competences,\r\n            typestage: type,\r\n            remunere: remuneration,\r\n            dateParution: new Date(),\r\n            etudiant: stringId,\r\n            actif: true,\r\n            valide: true,\r\n            supprime: false,\r\n            vedette: true,\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        //const jsonResponse = await response.json();\r\n        props.history.push(\r\n          \"/admin/\" + ls.get(\"nom\") + \"?niveau=\" + ls.get(\"niveau\")\r\n        ); //Retour à la page d'accueil\r\n\r\n        return response;\r\n      }\r\n      throw new Error(\"Request failed!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  /* Va chercher les infos des inputs du formulaire */\r\n  function handleAdd(event) {\r\n    event.preventDefault(); /*Empêche de rafraîchir la page, car le bouton est de type submit*/\r\n\r\n    /*variables des infos entrées dans le formulaire*/\r\n    const titreAdd = document.getElementById(\"titreAddId\").value;\r\n    const villeAdd = document.getElementById(\"villeAddId\").value;\r\n    const dureeAdd = document.getElementById(\"dureeAddId\").value;\r\n    const descriptionAdd = document.getElementById(\"descriptionAddId\").value;\r\n    const heuresSemaineAdd = document.getElementById(\"heuresSemaineAddId\")\r\n      .value;\r\n    const autresInfosAdd = document.getElementById(\"autresInfosAddId\").value;\r\n    const programmeSuiviAdd = document.getElementById(\"programmeSuiviAddId\")\r\n      .value;\r\n    const typeStageAdd = document.getElementById(\"typeStageAddId\").value;\r\n    const remunerationAdd = document.getElementById(\"remunereAddId\").value;\r\n    /*Fonction pour entrer les infos dans la bd */\r\n    /*Ajouter les compétences et autres Formations provenant d'une variable tableau */\r\n    AddDemande(\r\n      titreAdd,\r\n      villeAdd,\r\n      dureeAdd,\r\n      descriptionAdd,\r\n      heuresSemaineAdd,\r\n      autresInfosAdd,\r\n      programmeSuiviAdd,\r\n      typeStageAdd,\r\n      remunerationAdd\r\n    );\r\n  }\r\n\r\n  //Fonction pour le changement du secteur d'activité\r\n  function handleChangeSecteur(e) {\r\n    setSecteurChoisi(e.target.value);\r\n  }\r\n\r\n  //Fonction lors d'un changement dans les autres formations\r\n  //Si la valeur du checked est true ajouter la valeur au tableau, sinon effacer à partir de l'index\r\n  function handleChangeFormations(i) {\r\n    let tabFormations = autresFormationsAdd;\r\n    tabFormations.splice(i, 1);\r\n    setAutresFormationsAdd(tabFormations);\r\n    setChange(true);\r\n  }\r\n  //Fonctions lors d'un changement dans les autres formations\r\n  //Si la valeur du checked est true ajouter la valeur au tableau, sinon effacer à partir de l'index\r\n\r\n  function handleChangeCompetences(i) {\r\n    let tabCompetences = competences;\r\n    tabCompetences.splice(i, 1);\r\n    setCompetences(tabCompetences);\r\n    setChange(true);\r\n  }\r\n\r\n  //Fonction pour ajouter une formation supplémentaire\r\n  function handleClickAjoutFormation() {\r\n    let tabformations = autresFormationsAdd;\r\n    let formationAjoutee = document.getElementById(\"formationAddId\").value;\r\n    tabformations.push(formationAjoutee);\r\n    setAutresFormationsAdd(tabformations);\r\n    setChange(true);\r\n  }\r\n  //Fonction pour ajouter une compétence supplémentaire\r\n  function handleClickAjoutCompetence() {\r\n    let tabcompetences = competences;\r\n    let competenceAjoutee = document.getElementById(\"competenceAddId\").value;\r\n    tabcompetences.push(competenceAjoutee);\r\n    setCompetences(tabcompetences);\r\n    setChange(true);\r\n  }\r\n\r\n  return (\r\n    <Container fluid id=\"formAdd\">\r\n      <Link to=\"/\">\r\n        <img src={logoNoir} alt=\"logo\" className=\"w-50 mb-5 logo\" />\r\n      </Link>\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <h1 className=\"my-5 text-center font-large\">\r\n              Ajouter une demande de stage\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"fondGris\">\r\n          <Col xs={12}>\r\n            <Form className=\"py-5\">\r\n              <Form.Group controlId=\"titreAddId\">\r\n                <Form.Label>Titre de la demande</Form.Label>\r\n                <Form.Control type=\"text\" />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <select id=\"selectSecteurAdd\" onChange={handleChangeSecteur}>\r\n                  {secteurs.map((item) => (\r\n                    <option key={item.nom} value={item._id}>\r\n                      {item.nom}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"villeAddId\">\r\n                <Form.Label>Ville</Form.Label>\r\n                <Form.Control type=\"text\" />\r\n              </Form.Group>\r\n\r\n              <label className=\"d-block\">Date du début du stage</label>\r\n              {/*Faire des datepickers pour les dates  selected={Moment(objetDemande.dateDebut).format(\"DD/MM/YYYY\")}*/}\r\n              {/*moment().format(\"ddd, MMM DD YYYY, hh:mm:ss\");  */}\r\n              <DatePicker\r\n                utcOffset\r\n                locale=\"fr\"\r\n                dateFormat=\"MM/dd/yyyy\"\r\n                onChange={(evt) => setDateDebutAdd(Moment(evt).toDate())}\r\n                selected={Moment(dateDebutAdd).toDate()}\r\n              />\r\n              <label className=\"d-block\">Date de fin du stage</label>\r\n              {/*Faire des datepickers pour les dates  selected={Moment(objetDemande.dateDebut).format(\"DD/MM/YYYY\")}*/}\r\n              {/*moment().format(\"ddd, MMM DD YYYY, hh:mm:ss\");  */}\r\n              <DatePicker\r\n                utcOffset\r\n                locale=\"fr\"\r\n                dateFormat=\"MM/dd/yyyy\"\r\n                onChange={(evt) => setDateFinAdd(Moment(evt).toDate())}\r\n                selected={Moment(dateFinAdd).toDate()}\r\n              />\r\n              <Form.Group>\r\n                <Form.Label className=\"mr-2\">\r\n                  Durée en nombre de semaines\r\n                </Form.Label>\r\n                <input id=\"dureeAddId\" type=\"number\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"descriptionAddId\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={8} />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label className=\"mr-2\">\r\n                  Nombre d'heures/semaine\r\n                </Form.Label>\r\n                <input id=\"heuresSemaineAddId\" type=\"number\" />\r\n              </Form.Group>\r\n              {/*Changer pour un textarea */}\r\n              <Form.Group controlId=\"autresInfosAddId\">\r\n                <Form.Label>Informations supplémentaires</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={8} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"programmeSuiviAddId\">\r\n                <Form.Label>Programme suivi</Form.Label>\r\n                <Form.Control type=\"text\" />\r\n              </Form.Group>\r\n              {/*Les autres formations et les compétences sont affichées avec des checkbox*/}\r\n              <h3>Formations supplémentaires</h3>\r\n              {autresFormationsAdd.map((item, i) => {\r\n                return (\r\n                  <div>\r\n                    <input\r\n                      key={item + i}\r\n                      type=\"checkbox\"\r\n                      value={item}\r\n                      checked\r\n                      onClick={() => handleChangeFormations(i)}\r\n                    />\r\n                    <label for={item} className=\"ml-2\">\r\n                      {item}\r\n                    </label>\r\n                  </div>\r\n                );\r\n              })}\r\n              <input type=\"text\" className=\"mr-2\" id=\"formationAddId\"></input>\r\n              <Button type=\"button\" onClick={handleClickAjoutFormation}>\r\n                <IoMdAdd onClick={() => handleClickAjoutFormation} />\r\n              </Button>\r\n\r\n              <h3>Compétences</h3>\r\n              <Form.Group controlId=\"checkboxCompetences\">\r\n                {competences.map((item, i) => {\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        id={item}\r\n                        type=\"checkbox\"\r\n                        value={item}\r\n                        checked\r\n                        onClick={() => handleChangeCompetences(i)}\r\n                      />\r\n                      <label for={item} className=\"ml-2\">\r\n                        {item}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"mr-2\"\r\n                  id=\"competenceAddId\"\r\n                ></input>\r\n                <Button type=\"button\" onClick={handleClickAjoutCompetence}>\r\n                  <IoMdAdd onClick={() => handleClickAjoutCompetence} />\r\n                </Button>\r\n              </Form.Group>\r\n              {/*Ajouter un label,  Voir pour changer pour des boutons radio*/}\r\n              <Form.Group>\r\n                <h6>Type de stage</h6>\r\n                <select id=\"typeStageAddId\">\r\n                  <option value=\"Temps plein\">Temps plein</option>\r\n                  <option value=\"Temps partiel\">Temps partiel</option>\r\n                  <option value=\"Alternance travail étude\">\r\n                    Alternance travail étude\r\n                  </option>\r\n                </select>\r\n              </Form.Group>\r\n              {/*Ajouter un label,  Voir pour changer pour des boutons radio*/}\r\n              <Form.Group>\r\n                <h6>Rémunération</h6>\r\n                <select id=\"remunereAddId\">\r\n                  <option value=\"OUI\">OUI</option>\r\n                  <option value=\"NON\">NON</option>\r\n                  <option value=\"À la discrétion de l'entreprise\">\r\n                    À la discrétion de l'entreprise\r\n                  </option>\r\n                </select>\r\n              </Form.Group>\r\n              <p className=\"mt-5\">Pour l'administrateur</p>\r\n              {/*ID de l'étudiant */}\r\n              {/* Pour l'administrateur l'id est entré, pour l'étudiant la variable local ou le props */}\r\n              <Form.Group controlId=\"etudiantAddId\">\r\n                <Form.Label>ID de l'étudiant</Form.Label>\r\n                <Form.Control type=\"text\" disabled />\r\n              </Form.Group>\r\n              {/*accessible par l'administrateur*/}\r\n              <Form.Group controlId=\"vedetteAddId\">\r\n                <Form.Check\r\n                  disabled\r\n                  type=\"checkbox\"\r\n                  label=\"Demande en vedette\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Button\r\n              id=\"enregistrerAdd\"\r\n              className=\"my-5\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={handleAdd}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n            <Link\r\n              className=\"btn btn-primary\"\r\n              to={\r\n                \"/admin/\" +\r\n                ls.get(\"nom\") +\r\n                \"?niveau=\" +\r\n                ls.get(\"niveau\").toString()\r\n              }\r\n            >\r\n              Annuler\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\nFormAjoutDemande.defaultProps = { history: \"/\" };\r\nexport default FormAjoutDemande;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./style/stylesheets/main.sass\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Accueil from \"./views/Accueil\";\r\nimport APropos from \"./views/APropos\";\r\nimport Confidentialite from \"./views/Confidentialite\";\r\nimport Contact from \"./views/Contact\";\r\nimport Partenaires from \"./views/Partenaires\";\r\nimport OffresStageListe from \"./views/OffresStageListe\";\r\nimport DemandesStageListe from \"./views/DemandesStageListe\";\r\nimport AccesCompte from \"./views/AccesCompte\";\r\nimport Admin from \"./views/Admin\";\r\nimport FormEditDemande from \"./components/admin/FormEditDemande\";\r\nimport FormAjoutDemande from \"./components/admin/FormAjoutDemande\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      <Container fluid>\r\n        <Switch>\r\n          {/*Accueil est la première page*/}\r\n          <Route path=\"/\" exact component={Accueil} />\r\n          {/*Dans le menu, lien pour la page À propos*/}\r\n          <Route path=\"/apropos\" component={APropos} />\r\n          {/*Dans le menu, lien pour la page de la politique et confidentialité*/}\r\n          <Route path=\"/confidentialite\" component={Confidentialite} />\r\n          {/*Dans le menu, lien pour le formulaire de contact*/}\r\n          <Route path=\"/contact\" component={Contact} />\r\n          {/*Dans le menu, lien pour la page affichant tous les partenaires*/}\r\n          <Route path=\"/partenaires\" component={Partenaires} />\r\n          {/*Dans l'entête, lien pour la page affichant toutes les offres de stage*/}\r\n          <Route path=\"/offresstage\" component={OffresStageListe} />\r\n          {/*Dans l'entête et dans les sections des offres et demandes récentes, lien pour la page affichant toutes les demandes de stage*/}\r\n          <Route path=\"/demandesstage\" component={DemandesStageListe} />\r\n          {/*Dans la recherche du stagiaire, le lien détails affiche la section détaillée de la demande de stage au lieu de la liste*/}\r\n          <Route\r\n            path=\"/demandesstage/:candidat\"\r\n            component={DemandesStageListe}\r\n          />\r\n          {/*Dans la recherche du stage, le lien détails affiche la section détaillée de l'offre de stage au lieu de la liste*/}\r\n          <Route path=\"/offresstage/:entreprise\" component={OffresStageListe} />\r\n          {/*Dans l'entête et dans les sections des publications, lien pour la page affichant des formulaires pour la connexion ou l'inscription*/}\r\n          <Route path=\"/accescompte\" component={AccesCompte} />\r\n          {/*Formulaire d'édition d'une demande avec l'id de la demande en paramètre*/}\r\n          <Route path=\"/admin/edition/:demandeId\" component={FormEditDemande} />\r\n          {/*Formulaire d'ajout d'une demande, id de l'utilisateur en paramètre*/}\r\n          <Route\r\n            path=\"/admin/ajout/:utilisateurId\"\r\n            component={FormAjoutDemande}\r\n          />\r\n          {/*Lors de la connexion avec le niveau d'acces passé en paramètre*/}\r\n          <Route path=\"/admin/:acces\" component={Admin} />\r\n\r\n          {/*En cas d'erreur dans l'url on retourne à la page d'accueil*/}\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //Dépendance ajouté pour l'intégration\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router basename=\"/projetsynthesemaudharvey/build\">\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}